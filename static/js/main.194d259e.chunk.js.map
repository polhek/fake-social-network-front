{"version":3,"sources":["redux/hooks.ts","redux/userSlice.ts","components/notifications/NotificationItem.tsx","components/notifications/Notification.tsx","components/Header.tsx","components/Login.tsx","components/otheruser/SendRequest.tsx","components/otheruser/CancelRequest.tsx","components/otheruser/RemoveFriend.tsx","components/otheruser/ReplyRequest.tsx","components/OtherUser.tsx","redux/allUsersSlice.ts","redux/postsSlice.ts","components/AllUsers.tsx","components/friends/Friend.tsx","components/friends/FriendList.tsx","components/main/NewPost.tsx","components/main/Like.tsx","components/main/Comment.tsx","components/main/LikePost.tsx","components/main/CommentPost.tsx","components/main/DeletePost.tsx","helper.ts","components/main/CommentItem.tsx","components/main/NewComment.tsx","components/main/Comments.tsx","components/main/PostEdit.tsx","components/main/Post.tsx","components/main/PostList.tsx","components/main/PostMain.tsx","components/pendingRequests/PendingRequest.tsx","components/pendingRequests/PendingFriend.tsx","components/sendRequests/Send.tsx","components/sendRequests/SendFriend.tsx","components/Odinbook.tsx","hoc/protectedRoute.tsx","components/profile/ProfileMain.tsx","components/profile/Profile.tsx","components/Register.tsx","App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","loginUserLocal","createAsyncThunk","formData","thunkAPI","a","axios","post","email","password","response","status","localStorage","setItem","data","token","loggedIn","user","rejectWithValue","console","log","loginUser","access_token","updateUser","get","headers","Authorization","initialState","undefined","isFetching","isSuccess","isError","userSlice","createSlice","name","reducers","logOut","state","clear","extraReducers","builder","addCase","fulfilled","payload","rejected","pending","actions","NotificationItem","notification","dispatch","notificationStatus","unread","getItem","readNotification","delete","_id","read","onClick","className","text","Notification","props","notifications","map","item","Header","useState","show","setShow","to","unreadNotifications","filter","length","onlyUnreadCount","src","profile_img_url","alt","first_name","last_name","Login","setEmail","setPassword","responseFacebook","accessToken","localLogin","event","preventDefault","appId","process","autoLoad","fields","callback","cssClass","onSubmit","htmlFor","type","placeholder","value","onChange","target","required","SendRequest","secondUser_id","loggedUser_id","sendFriendRequest","toString","CancelRequest","cancelFriendRequest","RemoveFriend","removeFriendRequest","ReplyRequest","cancelFriend","acceptFriend","put","OtherUser","loggedUser","id","friends","includes","friend_requests","friend_send","getAllUsers","allUsers","allUsersSlice","getAllPosts","posts","allPosts","allPostsSlice","AllUsers","loading","useEffect","color","height","width","Friend","friend","FriendList","friendList","NewPost","setText","image","setImage","ref","useRef","submitHandler","e","FormData","append","current","changeHandler","files","postImageHandler","Like","likes","Comment","comments","showHide","LikePost","postId","likePost","CommentPost","DeletePost","deletePost","timeFromPostTime","time","start","DateTime","now","createdAtPost","fromISO","differenceBetween","diff","obj","toObject","minutes","Math","round","shiftTo","hours","days","CommentItem","comment","deleteComment","createdAt","NewComment","newComment","setNewComment","Comments","allComments","PostEdit","userImg","closeModal","setLoading","getPost","singlePost","t","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","padding","borderRadius","Post","showComments","setShowComments","modalIsOpen","setIsOpen","image_url","isOpen","onRequestClose","style","contentLabel","PostList","friendPosts","PostMain","PendingRequest","request","PendingFriend","friendRequests","Send","sendRequest","SendFriend","sendFriendRequests","Odinbook","ProtectedRoute","Component","component","rest","render","routeProps","pathname","from","location","ProfileMain","profileImage","setProfileImage","onChangeHandler","Profile","Register","setFirst_name","setLast_name","error","setError","redirect","setRedirect","msg","App","exact","path","Boolean","window","hostname","match","store","configureStore","reducer","userReducer","allUserReducer","allPostsReducer","defaults","baseURL","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kLAIaA,EAAiB,kBAAMC,eACvBC,EAAkDC,I,8DCClDC,EAAiBC,YAAiB,kBAAD,uCAAoB,WAAMC,EAAmBC,GAAzB,eAAAC,EAAA,+EAErCC,IAAMC,KAAK,wDAAwD,CAACC,MAAOL,EAASK,MAAMC,SAAUN,EAASM,WAFxE,UAIpC,OAFlBC,EAFsD,QAI/CC,OAJ+C,uBAKxDC,aAAaC,QAAQ,QAASH,EAASI,KAAKC,OALY,6CAM7CL,EAASI,MANoC,IAM9BE,UAAS,EAAMC,KAAMP,EAASI,KAAKG,QANL,gCAQjDb,EAASc,gBAAgBR,EAASI,OARe,iEAW5DK,QAAQC,IAAI,QAAS,KAAIV,SAASI,MAX0B,kBAYrDV,EAASc,gBAAgB,KAAIR,SAASI,OAZe,0DAApB,yDAgBjCO,EAAanB,YAAiB,aAAD,uCAAe,WAAMoB,EAAsBlB,GAA5B,eAAAC,EAAA,+EAE1BC,IAAMC,KAAK,iEAAiE,CAACe,iBAFnD,UAIzB,OAFlBZ,EAF2C,QAIpCC,OAJoC,uBAK7CC,aAAaC,QAAQ,QAASH,EAASI,KAAKC,OALC,6CAMlCL,EAASI,MANyB,IAMnBE,UAAS,EAAMC,KAAMP,EAASI,KAAKG,QANhB,gCAQtCb,EAASc,gBAAgBR,EAASI,OARI,iEAWjDK,QAAQC,IAAI,QAAS,KAAIV,SAASI,MAXe,kBAY1CV,EAASc,gBAAgB,KAAIR,SAASI,OAZI,0DAAf,yDAiB7BS,EAAarB,YAAiB,cAAD,uCAAgB,WAAMa,EAAeX,GAArB,eAAAC,EAAA,+EAE7BC,IAAMkB,IAAI,6DAA6D,CAC5FC,QAAS,CAAEC,cAAeX,KAHwB,UAM5B,OAJlBL,EAF8C,QAMvCC,OANuC,oEAOrCD,EAASI,MAP4B,IAOtBG,KAAMP,EAASI,KAAKG,QAPE,gCASzCb,EAASc,gBAAgBR,EAASI,OATO,gEAYpDK,QAAQC,IAAI,QAAS,KAAIV,SAASI,MAZkB,kBAa7CV,EAASc,gBAAgB,KAAIR,SAASI,OAbO,0DAAhB,yDA4ClCa,EAA0B,CAC9BX,UAAU,EACVC,UAAMW,EACNC,YAAY,EACZC,WAAU,EACVC,SAAQ,GAGGC,EAAYC,YAAY,CACnCC,KAAM,OAENP,eACAQ,SAAU,CACNC,OAAQ,SAACC,GAGL,OAFAzB,aAAa0B,QACLX,IAIhBY,cAAc,SAACC,GACXA,EAAQC,QAAQpB,EAAUqB,WAAW,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAK3C,OAJAN,EAAMpB,KAAO0B,EAAQ1B,KACrBoB,EAAMrB,SAAW2B,EAAQ3B,SACzBqB,EAAMR,YAAa,EACnBQ,EAAMP,WAAY,EACXO,KAEXG,EAAQC,QAAQpB,EAAUuB,UAAU,SAACP,EAAD,GAAwB,EAAdM,QAC1CN,EAAMR,YAAa,EACnBQ,EAAMN,SAAU,KAEpBS,EAAQC,QAAQpB,EAAUwB,SAAQ,SAACR,GAC/BA,EAAMR,YAAa,KAErBW,EAAQC,QAAQlB,EAAWmB,WAAW,SAACL,EAAD,GAAoB,IAAZM,EAAW,EAAXA,QAC5CN,EAAMpB,KAAO0B,EAAQ1B,QAEvBuB,EAAQC,QAAQxC,EAAeyC,WAAW,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAKlD,OAJAN,EAAMpB,KAAO0B,EAAQ1B,KACrBoB,EAAMrB,SAAW2B,EAAQ3B,SACzBqB,EAAMR,YAAa,EACnBQ,EAAMP,WAAY,EACXO,KAEXG,EAAQC,QAAQxC,EAAe2C,UAAU,SAACP,EAAD,GAAwB,EAAdM,QAC/CN,EAAMR,YAAa,EACnBQ,EAAMN,SAAU,KAEpBS,EAAQC,QAAQxC,EAAe4C,SAAQ,SAACR,GACpCA,EAAMR,YAAa,QAOdO,EAAWJ,EAAUc,QAArBV,OAGAJ,IAAf,Q,eCrFae,EAhDU,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aACpBC,EAAWpD,IACXqD,EAAqBF,EAAaG,OAClCpC,EAAQH,aAAawC,QAAQ,SAC7BC,EAAmB,WACnBtC,IACFT,IAAMgD,OAAN,2BAAiCN,EAAaO,IAA9C,SAA0D,CACxD9B,QAAS,CAAEC,cAAeX,KAE5BkC,EAAS1B,EAAWR,MAYlByC,EAAO,WACX,OACE,sBACEC,QAASJ,EACTK,UAAU,2CAFZ,UAIGV,EAAaW,KACd,sBAAMD,UAAU,+BAAhB,sBAKAP,EAAS,WACb,OACE,sBACEM,QAASJ,EACTK,UAAU,2CAFZ,UAIGV,EAAaW,KACd,sBAAMD,UAAU,8BAAhB,wBAKN,OAAO,mCA/BDR,EACKC,IAEAK,OCLEI,EAfM,SAACC,GACpB,IAAMC,EAAgB/D,GACpB,SAACsC,GAAD,uBAAWA,EAAMpB,KAAKA,YAAtB,aAAW,EAAiB6C,iBAG9B,OACE,qBAAKJ,UAAU,sFAAf,SACGI,IAAa,OACZA,QADY,IACZA,OADY,EACZA,EAAeC,KAAI,SAACC,GAClB,OAAO,cAAC,EAAD,CAAiChB,aAAcgB,GAAxBA,EAAKT,YCwE9BU,EA7EA,SAACJ,GACd,IAAMZ,EAAWpD,IACXmB,EAAWjB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKD,YAChDC,EAAOlB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QAHnB,EAIPiD,oBAAS,GAJF,mBAIxBC,EAJwB,KAIlBC,EAJkB,KAsB/B,OACE,yBAAQV,UAAU,mEAAlB,UACE,cAAC,IAAD,CAAMW,GAAG,YAAT,SACE,qBAAIX,UAAU,qBAAd,iBACM,sBAAMA,UAAU,eAAhB,kBADN,YAKF,sBAAKA,UAAU,6CAAf,WACI1C,GACA,oBAAI0C,UAAU,kCAAd,mCAID1C,GACC,qCACE,sBAAK0C,UAAU,WAAf,UACE,8BACE,yBAAQD,QAtBD,WACnBW,GAASD,IAqBkCT,UAAU,oBAAzC,UACE,cAAC,IAAD,CAAUA,UAAU,yBA/BZ,WACtB,IAAMV,EAAY,OAAG/B,QAAH,IAAGA,OAAH,EAAGA,EAAM6C,cACrBQ,EAAmB,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAcuB,QACxC,SAACP,GAAD,OAA0B,IAAhBA,EAAKb,UAEjB,GAAImB,EAAqB,OAAOA,EAAoBE,OA2BrCC,QAGJN,GAAQ,cAAC,EAAD,OAGX,cAAC,IAAD,CAAME,GAAG,WAAT,SACE,sBAAMX,UAAU,0GAAhB,uBAKF,sBAAKA,UAAU,oBAAf,UACE,qBACEA,UAAU,kDACVgB,IAAG,OAAEzD,QAAF,IAAEA,OAAF,EAAEA,EAAM0D,gBACXC,IAAI,WAEN,oBAAIlB,UAAU,qBAAd,0BAAuCzC,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAM4D,WAA7C,mBAA2D5D,QAA3D,IAA2DA,OAA3D,EAA2DA,EAAM6D,gBAGnE,yBACErB,QA1DW,WACrBR,EAASb,MA0DCsB,UAAU,gFAFZ,UAIE,cAAC,IAAD,CAAYA,UAAU,4BACtB,wD,wBC+BCqB,EAhGD,SAAClB,GAAkB,IAAD,EACJK,mBAAiB,IADb,mBACvB1D,EADuB,KAChBwE,EADgB,OAEEd,mBAAiB,IAFnB,mBAEvBzD,EAFuB,KAEbwE,EAFa,KAIxBhC,EAAWpD,IACXmB,EAAWjB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKD,YAEhDkE,EAAgB,uCAAG,WAAOxE,GAAP,eAAAL,EAAA,sDACjBiB,EAAuBZ,EAASyE,YACtCvE,aAAaC,QAAQ,eAAgBS,GACrC2B,EAAS5B,EAAUC,IAHI,2CAAH,sDAMhB8D,EAAU,uCAAG,WAAOC,GAAP,SAAAhF,EAAA,sDACjBgF,EAAMC,iBAENrC,EAAShD,EADQ,CAAEO,QAAOC,cAFT,2CAAH,sDAMhB,OAAIO,EACK,cAAC,IAAD,CAAUqD,GAAG,cAIpB,sBAAKX,UAAU,uBAAf,UACE,sBAAKA,UAAU,yGAAf,UACE,mFACA,cAAC,IAAD,CACE6B,MA9BYC,kBA+BZC,UAAU,EACVC,OAAO,qBACPC,SAAUT,EACVU,SAAS,oDAEX,sBAAMlC,UAAU,6BAAhB,4HAKF,sBAAKA,UAAU,6CAAf,UACE,uEAEA,oBAAIA,UAAU,0BAAd,mBAEA,sBAAMmC,SAAUT,EAAhB,SACE,sBAAK1B,UAAU,sBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,QAAf,SACE,wCAEF,uBACEpC,UAAU,yBACVqC,KAAK,QACLC,YAAY,cACZ9D,KAAK,QACL+D,MAAOzF,EACP0F,SAAU,SAACb,GACTL,EAASK,EAAMc,OAAOF,QAExBG,UAAQ,OAGZ,sBAAK1C,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,WAAf,SACE,2CAEF,uBACEpC,UAAU,yBACVqC,KAAK,WACLC,YAAY,iBACZ9D,KAAK,WACL+D,MAAOxF,EACPyF,SAAU,SAACb,GACTJ,EAAYI,EAAMc,OAAOF,QAE3BG,UAAQ,OAGZ,sBAAK1C,UAAU,cAAf,UACE,wBAAQqC,KAAK,SAASrC,UAAU,iCAAhC,oBAEU,YAIhB,sBAAKA,UAAU,OAAf,UACE,iEACA,cAAC,IAAD,CAAMW,GAAG,YAAT,SACE,wBAAQX,UAAU,gCAAlB,kCCxDG2C,EAlCK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,cACfrD,GADyD,EAA3BsD,cACnB1G,KAEX2G,EAAiB,uCAAG,8BAAAnG,EAAA,oEAEhBU,EAAQH,aAAawC,QAAQ,UAFb,gCAIG9C,IAAMC,KAAN,2BACR+F,QADQ,IACRA,OADQ,EACRA,EAAeG,WADP,iBAErB,KACA,CACEhF,QAAS,CAAEC,cAAeX,KARV,OAIdL,EAJc,OAWpBuC,EAAS1B,EAAWR,IACpBI,QAAQC,IAAIV,GAZQ,yDAetBS,QAAQC,IAAI,KAAIV,UAfM,0DAAH,qDAkBvB,OACE,mCACE,yBACE+C,QAAS+C,EACT9C,UAAU,oFAFZ,UAIE,cAAC,IAAD,CAAUA,UAAU,uBACpB,6DCKOgD,EAlCO,SAAC,GAA8B,IAA5BJ,EAA2B,EAA3BA,cACjBrD,EAAWpD,IACXmB,EAAWjB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKD,YAEhD2F,EAAmB,uCAAG,8BAAAtG,EAAA,oEAElBU,EAAQH,aAAawC,QAAQ,YAEtBpC,EAJW,gCAKCV,IAAMgD,OAAN,oBACRgD,EADQ,kBAErB,CAAE7E,QAAS,CAAEC,cAAeX,KAPR,OAKhBL,EALgB,OAStBuC,EAAS1B,EAAWR,IACpBI,QAAQC,IAAI,SAAUV,GAVA,yDAaxBS,QAAQC,IAAI,KAAIV,UAbQ,0DAAH,qDAiBzB,OACE,mCACE,yBACE+C,QAASkD,EACTjD,UAAU,gFAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,uBACvB,wDCMOkD,EAlCM,SAAC,GAA8B,IAA5BN,EAA2B,EAA3BA,cAChBrD,EAAWpD,IACXmB,EAAWjB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKD,YAEhD6F,EAAmB,uCAAG,8BAAAxG,EAAA,oEAElBU,EAAQH,aAAawC,QAAQ,YAEtBpC,EAJW,gCAKCV,IAAMgD,OAAN,oBACRgD,EADQ,kBAErB,CAAE7E,QAAS,CAAEC,cAAeX,KAPR,OAKhBL,EALgB,OAStBuC,EAAS1B,EAAWR,IACpBI,QAAQC,IAAI,SAAUV,GAVA,yDAaxBS,QAAQC,IAAI,KAAIV,UAbQ,0DAAH,qDAiBzB,OACE,mCACE,yBACE+C,QAASoD,EACTnD,UAAU,gFAFZ,UAIE,cAAC,IAAD,CAAWA,UAAU,uBACrB,uDC+BOoD,EA3DM,SAAC,GAA8B,IAA5BR,EAA2B,EAA3BA,cAChBrD,EAAWpD,IACXmB,EAAWjB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKD,YAEhD+F,EAAY,uCAAG,8BAAA1G,EAAA,oEAEXU,EAAQH,aAAawC,QAAQ,YAEtBpC,EAJI,gCAKQV,IAAMgD,OAAN,oBACRgD,EADQ,kBAErB,CAAE7E,QAAS,CAAEC,cAAeX,KAPf,OAKTL,EALS,OASfS,QAAQC,IAAI,SAAUV,GACtBuC,EAAS1B,EAAWR,IAVL,yDAajBI,QAAQC,IAAI,KAAIV,UAbC,0DAAH,qDAiBZsG,EAAY,uCAAG,8BAAA3G,EAAA,oEAEXU,EAAQH,aAAawC,QAAQ,YAEtBpC,EAJI,gCAKQV,IAAM2G,IAAN,oBACRX,EADQ,kBAErB,KACA,CAAE7E,QAAS,CAAEC,cAAeX,KARf,OAKTL,EALS,OAWfuC,EAAS1B,EAAWR,IACpBI,QAAQC,IAAI,SAAUV,GAZP,yDAejBS,QAAQC,IAAI,KAAIV,UAfC,0DAAH,qDAkBlB,OACE,qCACE,yBACE+C,QAASuD,EACTtD,UAAU,kFAFZ,UAIE,cAAC,IAAD,CAAiBA,UAAU,uBAC3B,6CAEF,yBACED,QAASsD,EACTrD,UAAU,gFAFZ,UAIE,cAAC,IAAD,CAAWA,UAAU,uBACrB,iDCXOwD,EAxCG,SAAC,GAAqB,IAAnBjG,EAAkB,EAAlBA,KACbkG,EAAapH,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QAClDmG,EAAE,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAY5D,IAEvB,OACE,sBAAKG,UAAU,oDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBACEA,UAAU,gDACVgB,IAAG,OAAEzD,QAAF,IAAEA,OAAF,EAAEA,EAAM0D,gBACXC,IAAI,WAEN,mBAAGlB,UAAU,YAAb,0BAA6BzC,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAM4D,WAAnC,mBAAiD5D,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAM6D,UAAvD,UAEF,iCACO,OAAJ7D,QAAI,IAAJA,OAAA,EAAAA,EAAMoG,QAAQC,SAASF,KACtB,cAAC,EAAD,CAAcd,cAAa,OAAErF,QAAF,IAAEA,OAAF,EAAEA,EAAMsC,QAGpC,OAACtC,QAAD,IAACA,OAAD,EAACA,EAAMsG,gBAAgBD,SAASF,OAC/B,OAACnG,QAAD,IAACA,OAAD,EAACA,EAAMuG,YAAYF,SAASF,OAC5B,OAACnG,QAAD,IAACA,OAAD,EAACA,EAAMoG,QAAQC,SAASF,KACtB,cAAC,EAAD,CACEd,cAAa,OAAErF,QAAF,IAAEA,OAAF,EAAEA,EAAMsC,IACrBgD,cAAa,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAY5D,OAI5B,OAAJtC,QAAI,IAAJA,OAAA,EAAAA,EAAMuG,YAAYF,SAASF,KAC1B,cAAC,EAAD,CAAcd,cAAa,OAAErF,QAAF,IAAEA,OAAF,EAAEA,EAAMsC,OAGhC,OAAJtC,QAAI,IAAJA,OAAA,EAAAA,EAAMsG,gBAAgBD,SAASF,KAC9B,cAAC,EAAD,CAAed,cAAa,OAAErF,QAAF,IAAEA,OAAF,EAAEA,EAAMsC,aCxCjCkE,EAAevH,YAAiB,YAAD,uCAAc,WAAMa,EAAeX,GAArB,iBAAAC,EAAA,+EAE3BC,IAAMkB,IAAI,2DAA2D,CACxFC,QAAS,CAAEC,cAAeX,KAHoB,UAM1B,OAJlBL,EAF4C,QAMrCC,OANqC,uBAOxC+G,EAAWhH,EAASI,KAAK4G,SAPe,6CAQnChH,EAASI,MAR0B,IAQnB4G,SAAUA,KARS,gCAUvCtH,EAASc,gBAAgBR,EAASI,OAVK,iEAalDK,QAAQC,IAAI,QAAS,KAAIV,SAASI,MAbgB,kBAc3CV,EAASc,gBAAgB,KAAIR,SAASI,OAdK,0DAAd,yDA6BpCa,EAA0B,CAC9B+F,cAAS9F,EACTC,YAAY,EACZC,WAAU,EACVC,SAAQ,GA2BK4F,EAxBc1F,YAAY,CACvCC,KAAM,WAENP,eACAQ,SAAU,GAGVI,cAAc,SAACC,GACXA,EAAQC,QAAQgF,EAAY/E,WAAW,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAI7C,OAHAN,EAAMqF,SAAW/E,EAAQ+E,SACzBrF,EAAMR,YAAa,EACnBQ,EAAMP,WAAY,EACXO,KAEXG,EAAQC,QAAQgF,EAAY7E,UAAU,SAACP,EAAD,GAAwB,EAAdM,QAC5CN,EAAMR,YAAa,EACnBQ,EAAMN,SAAU,KAEpBS,EAAQC,QAAQgF,EAAY5E,SAAQ,SAACR,GACjCA,EAAMR,YAAa,QAK7B,QC5DW+F,EAAe1H,YAAiB,YAAD,uCAAc,WAAMa,EAAeX,GAArB,iBAAAC,EAAA,+EAE3BC,IAAMkB,IAAI,uDAAuD,CACpFC,QAAS,CAAEC,cAAeX,KAHoB,UAM1B,OAJlBL,EAF4C,QAMrCC,OANqC,uBAOxCkH,EAAQnH,EAASI,KAAK+G,MAPkB,6CAQnCnH,EAASI,MAR0B,IAQnB+G,MAAOA,KARY,gCAUvCzH,EAASc,gBAAgBR,EAASI,OAVK,iEAalDK,QAAQC,IAAI,QAAS,KAAIV,SAASI,MAbgB,kBAc3CV,EAASc,gBAAgB,KAAIR,SAASI,OAdK,0DAAd,yDAgCpCa,EAA2B,CAC/BmG,cAASlG,EACTC,YAAY,EACZC,WAAU,EACVC,SAAQ,GA2BKgG,EAxBc9F,YAAY,CACvCC,KAAM,WAENP,eACAQ,SAAU,GAGVI,cAAc,SAACC,GACXA,EAAQC,QAAQmF,EAAYlF,WAAW,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAI7C,OAHAN,EAAMyF,SAAWnF,EAAQkF,MACzBxF,EAAMR,YAAa,EACnBQ,EAAMP,WAAY,EACXO,KAEXG,EAAQC,QAAQmF,EAAYhF,UAAU,SAACP,EAAD,GAAwB,EAAdM,QAC5CN,EAAMR,YAAa,EACnBQ,EAAMN,SAAU,KAEpBS,EAAQC,QAAQmF,EAAY/E,SAAQ,SAACR,GACjCA,EAAMR,YAAa,QAK7B,Q,iBC1BamG,EAjCE,SAACnE,GAEhB,IAAMZ,EAAWpD,IACXsH,EAAapH,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QAClDD,EAAWjB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKD,YAChD0G,EAAW3H,GAAe,SAACsC,GAAD,OAAWA,EAAMqF,SAASA,YACpD3G,EAAQH,aAAawC,QAAQ,SAC7B6E,EAAUlI,GAAe,SAACsC,GAAD,OAAWA,EAAMqF,SAAS7F,cASzD,OAPAqG,qBAAU,WACJlH,GAAYD,IACdkC,EAASwE,EAAY1G,IACrBkC,EAAS2E,EAAY7G,OAEtB,CAACoG,IAGF,sBAAKzD,UAAU,kFAAf,UACE,oBAAIA,UAAU,0BAAd,wBACCuE,GACC,qBAAKvE,UAAU,sBAAf,SACE,cAAC,IAAD,CAAQqC,KAAK,YAAYoC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,QAG9DJ,GACAP,GACAA,EAAS3D,KAAI,SAAC9C,GACZ,OAAO,cAAC,EAAD,CAA0BA,KAAMA,GAAhBA,EAAKsC,YCVvB+E,EAlBA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAChB,OACE,sBAAK7E,UAAU,oDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBACEA,UAAU,gDACVgB,IAAG,OAAE6D,QAAF,IAAEA,OAAF,EAAEA,EAAQ5D,gBACbC,IAAI,WAEN,mBAAGlB,UAAU,YAAb,0BAA6B6E,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQ1D,WAArC,mBAAmD0D,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAQzD,UAA3D,UAEF,8BACE,cAAC,EAAD,CAAcwB,cAAa,OAAEiC,QAAF,IAAEA,OAAF,EAAEA,EAAQhF,YCU9BiF,EAvBI,SAAC3E,GAClB,IAAM4E,EAAa1I,GAAe,SAACsC,GAAD,uBAAWA,EAAMpB,KAAKA,YAAtB,aAAW,EAAiBoG,WACxDY,EAAUlI,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKY,cACrD,OACE,sBAAK6B,UAAU,oFAAf,UACE,oBAAIA,UAAU,0BAAd,sBACCuE,GACC,qBAAKvE,UAAU,sBAAf,SACE,cAAC,IAAD,CAAQqC,KAAK,YAAYoC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,QAG9DJ,GACAQ,GACAA,EAAW1E,KAAI,SAACwE,GACd,OAAO,cAAC,EAAD,CAAyBA,OAAQA,GAApBA,EAAOhF,UAE9B,OAACkF,QAAD,IAACA,OAAD,EAACA,EAAYjE,SACZ,mBAAGd,UAAU,eAAb,sC,QC0FOgF,EAzGC,SAAC7E,GAAkB,IAAD,EACRK,mBAAiB,IADT,mBACzBP,EADyB,KACnBgF,EADmB,KAE1B5H,EAAQH,aAAawC,QAAQ,SAFH,EAGNc,mBAAc,MAHR,mBAGzB0E,EAHyB,KAGlBC,EAHkB,KAI1BC,EAAMC,iBAAgC,MACtC9F,EAAWpD,IAWXmJ,EAAa,uCAAG,WAAOC,GAAP,eAAA5I,EAAA,yDACpB4I,EAAE3D,iBADkB,WAGdvE,GAAS4C,EAAKa,OAAS,IAAMoE,EAHf,uBAIhBzH,QAAQC,IAAI,aAJI,SAKVd,IAAMC,KACV,oBACA,CAAEoD,KAAMA,GACR,CAAElC,QAAS,CAAEC,cAAeX,KARd,OAUhBkC,EAAS1B,EAAWR,IACpB4H,EAAQ,IAXQ,YAad5H,GAAS6H,GAASjF,EAAKa,OAAS,GAblB,wBAchBrD,QAAQC,IAAI,SACNN,EAAO,IAAIoI,UAEZC,OAAO,OAAQxF,GACpB7C,EAAKqI,OAAO,OAAQP,GAlBJ,UAmBVtI,IAAMC,KAAK,oBAAqBO,EAAM,CAC1CW,QAAS,CACP,eAAgB,sBAChBC,cAAeX,KAtBH,QA0BhB4H,EAAQ,IACRE,EAAS,MACLC,EAAIM,UACNN,EAAIM,QAAQnD,MAAQ,IAGtBhD,EAAS1B,EAAWR,IAhCJ,0DAmClBI,QAAQC,IAAR,MAnCkB,0DAAH,sDAuCbH,EAAOlB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QAClD,OACE,qBAAKyC,UAAU,6CAAf,SACE,uBACEmC,SAAU,SAACR,GACT2D,EAAc3D,IAFlB,UAKE,sBAAK3B,UAAU,OAAf,UACE,qBACEA,UAAU,iDACVgB,IAAG,OAAEzD,QAAF,IAAEA,OAAF,EAAEA,EAAM0D,gBACXC,IAAI,WAGN,cAAC,IAAD,CACEoB,YAAW,8CAAkC/E,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAM4D,YACnDnB,UAAU,qCACVwC,SAAU,SAACb,IAlEC,SAACA,GACrBsD,EAAQtD,EAAMc,OAAOF,OAkEXoD,CAAchE,IAEhBY,MAAOtC,EACPyC,UAAQ,OAGZ,sBAAK1C,UAAU,yCAAf,UACE,yBACEqC,KAAK,SACLrC,UAAU,kEAFZ,UAIE,cAAC,IAAD,CAAUA,UAAU,iBACpB,gDAEF,8BACE,uBACEqC,KAAK,OACL7D,KAAK,OACLkF,GAAG,OACHlB,SAAU,SAACb,IAlFE,SAACA,GACnBA,EAAMc,OAAOmD,OAClBT,EAASxD,EAAMc,OAAOmD,MAAM,IAiFhBC,CAAiBlE,IAEnByD,IAAKA,eCrFJU,EAbF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACd,OACE,qCACE,iCACE,cAAC,IAAD,CAAa/F,UAAU,kCAEzB,qBAAKA,UAAU,wEAAf,SACG+F,EAAMjF,aCKAkF,EAZC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAC3B,OACE,mCACE,wBAAQnG,QAASmG,EAAjB,SACE,oBAAGlG,UAAU,oCAAb,UACGiG,EAASnF,OADZ,oBC0BOqF,GA1BE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OACZ/I,EAAQH,aAAawC,QAAQ,SAC7BH,EAAWpD,IACXkK,EAAQ,uCAAG,sBAAA1J,EAAA,mEAETU,EAFS,gCAGLT,IAAM2G,IAAN,qBAAwB6C,EAAxB,SAAuC,KAAM,CACjDrI,QAAS,CAAEC,cAAeX,KAJjB,OAMXkC,EAAS1B,EAAWR,IANT,uDASbI,QAAQC,IAAR,MATa,yDAAH,qDAYd,OACE,yBACEqC,QAASsG,EACTrG,UAAU,6EAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,WCRWsG,GAZK,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,SACrB,OACE,yBACEnG,QAASmG,EACTlG,UAAU,6EAFZ,UAIE,cAAC,IAAD,CAAcA,UAAU,YAJ1B,eC0BWuG,GAzBI,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,OACd/I,EAAQH,aAAawC,QAAQ,SAC7BH,EAAWpD,IACXqK,EAAU,uCAAG,sBAAA7J,EAAA,mEAEXU,EAFW,gCAGPT,IAAMgD,OAAN,oBAA0BwG,EAA1B,WAA2C,CAC/CrI,QAAS,CAAEC,cAAeX,KAJf,OAMbkC,EAAS1B,EAAWR,IANP,8GAAH,qDAWhB,OACE,yBACE0C,QAASyG,EACTxG,UAAU,6EAFZ,UAIE,cAAC,IAAD,CAAWA,UAAU,YAJvB,a,SCkBayG,GAzCQ,SAACC,GACtB,IAAMC,EAAQC,YAASC,MACjBC,EAAgBF,YAASG,QAAQL,GAEjCM,EAAoBL,EAAMM,KAAKH,EAAe,WAChDI,EAAG,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAmBG,WAE7B,GAAID,EAAK,CACP,IAAIE,EAAUF,EAAIE,QAClB,QAAgBlJ,IAAZkJ,EACF,OAAO,KAET,GAAIA,EAAU,EACZ,MAAM,UAER,GAAIA,EAAU,GACZ,MAAM,GAAN,OAAUC,KAAKC,MAAMF,GAArB,MAEF,GAAIA,EAAU,GAAI,CAAC,IAAD,EAEZV,EAAI,UADMM,EAAkBO,QAAQ,SAASJ,WAChCK,aAAT,aAAkBtJ,EAE1B,GAAIwI,EAAM,CACR,IAAIY,EAAQD,KAAKC,MAAMZ,GACvB,GAAIY,GAAS,GACX,MAAM,GAAN,OAAUA,EAAV,KACM,IAAD,IACCG,EAAOT,EAAkBO,QAAQ,OAAQ,SAASJ,WACpDT,EAAI,UAAGe,EAAKA,YAAR,aAAgBvJ,EACpBsJ,EAAK,UAAGC,EAAKD,aAAR,aAAiBtJ,EAE1B,GAAIwI,GAAQc,EACV,MAAM,GAAN,OAAUd,EAAV,YAAkBW,KAAKC,MAAME,GAA7B,OAMV,OAAO,MC8BIE,GAlDK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASvB,EAAoB,EAApBA,OACxB7I,EAAOlB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QAC5CF,EAAQH,aAAawC,QAAQ,SAC7BH,EAAWpD,IAEXyL,EAAa,uCAAG,sBAAAjL,EAAA,mEAEdU,EAFc,gCAGVT,IAAMgD,OAAN,mBACQwG,EADR,2BAC0BuB,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAS9H,IADnC,WAEJ,CACE9B,QAAS,CAAEC,cAAeX,KANd,OAShBkC,EAAS1B,EAAWR,IATJ,uDAYlBI,QAAQC,IAAR,MAZkB,yDAAH,qDAgBnB,OACE,sBAAKsC,UAAU,0BAAf,UACE,qBACEA,UAAU,iDACVgB,IAAG,OAAE2G,QAAF,IAAEA,OAAF,EAAEA,EAASpK,KAAK0D,gBACnBC,IAAI,WAEN,sBAAKlB,UAAU,WAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,oBAAIA,UAAU,gBAAd,mBAAkC2H,EAAQpK,KAAK4D,WAA/C,YAA6DwG,EAAQpK,KAAK6D,UAA1E,OACA,mBAAGpB,UAAU,UAAb,gBAAwB2H,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAS1H,UAEnC,uBAAMD,UAAU,mDAAhB,UACGyG,GAAiBkB,EAAQE,WAC1B,cAAC,IAAD,CAAW7H,UAAU,mBAGpB,OAAJzC,QAAI,IAAJA,OAAA,EAAAA,EAAMsC,OAAQ8H,EAAQpK,KAAKsC,IAC1B,wBACEE,QAAS6H,EACT5H,UAAU,yGAFZ,SAIE,cAAC,IAAD,CAAWA,UAAU,eAErB,SCAK8H,GAvDI,SAAC,GAAuB,IAArB1B,EAAoB,EAApBA,OAAoB,EACJ5F,mBAAiB,IADb,mBACjCuH,EADiC,KACrBC,EADqB,KAElCzK,EAAOlB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QAC5CgC,EAAWpD,IACXkB,EAAQH,aAAawC,QAAQ,SAK7B4F,EAAa,uCAAG,WAAOC,GAAP,SAAA5I,EAAA,yDACpB4I,EAAE3D,iBADkB,WAGdvE,GAAS0K,EAAWjH,OAAS,GAHf,gCAIVlE,IAAMC,KAAN,mBACQuJ,EADR,gBAEJ,CAAEnG,KAAM8H,GACR,CAAEhK,QAAS,CAAEC,cAAeX,KAPd,OAShBkC,EAAS1B,EAAWR,IACpB2K,EAAc,IAVE,uDAalBvK,QAAQC,IAAR,MAbkB,yDAAH,sDAiBnB,OACE,sBAAMyE,SAAU,SAACR,GAAD,OAAW2D,EAAc3D,IAAzC,SACE,sBAAK3B,UAAU,qBAAf,UACE,qBACEA,UAAU,iDACVgB,IAAG,OAAEzD,QAAF,IAAEA,OAAF,EAAEA,EAAM0D,gBACXC,IAAI,WAGN,cAAC,IAAD,CACEoB,YAAW,sBACXtC,UAAU,qCACVwC,SAAU,SAACb,IAjCG,SAACA,GACrBqG,EAAcrG,EAAMc,OAAOF,OAiCnBoD,CAAchE,IAEhBY,MAAOwF,EACPrF,UAAQ,IAEV,wBACEL,KAAK,SACLrC,UAAU,6CAFZ,wBC/BOiI,GAdE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAa9B,EAAoB,EAApBA,OAC/B,OACE,sBAAKpG,UAAU,wDAAf,UACE,cAAC,GAAD,CAAYoG,OAAQA,IACnB8B,GACCA,EAAY7H,KAAI,SAACsH,GACf,OACE,cAAC,GAAD,CAA+BA,QAASA,EAASvB,OAAQA,GAAvCuB,EAAQ9H,Y,oBCsGvBsI,I,OAvGE,SAAC,GAA4C,IAA1C/B,EAAyC,EAAzCA,OAAQgC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EACnC7H,mBAAS,IAD0B,mBACpDP,EADoD,KAC9CgF,EAD8C,OAE7BzE,oBAAkB,GAFW,mBAEpD+D,EAFoD,KAE3C+D,EAF2C,KAGrDjL,EAAQH,aAAawC,QAAQ,SAC7BH,EAAWpD,IACjBqI,qBAAU,WACR+D,MACC,IAEH,IAAMA,EAAO,uCAAG,8BAAA5L,EAAA,mEAERU,EAFQ,gCAGeT,IAAMkB,IAAN,oBAAuBsI,GAAU,CACxDrI,QAAS,CAAEC,cAAeX,KAJlB,OAGJmL,EAHI,OAOJC,EAAYD,EAAWpL,KAAKP,KAAKoD,KACvCxC,QAAQC,IAAI8K,EAAWpL,KAAKP,MAC5BoI,EAAQwD,GACRH,GAAW,GAVD,yDAaZ7K,QAAQC,IAAR,MAbY,0DAAH,qDAqBP4H,EAAa,uCAAG,WAAOC,GAAP,SAAA5I,EAAA,yDACpB4I,EAAE3D,iBADkB,UAGdvE,EAHc,gCAIST,IAAM2G,IAAN,oBACV6C,EADU,WAEvB,CAAEnG,KAAMA,GACR,CACElC,QAAS,CAAEC,cAAeX,KARd,gBAYdgL,IACA9I,EAAS1B,EAAWR,KAbN,uDAiBlBI,QAAQC,IAAR,MAjBkB,yDAAH,sDAqBnB,OAAI6G,EAEA,qBAAKvE,UAAU,yDAAf,SACE,cAAC,IAAD,CAAQqC,KAAK,YAAYoC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,OAMhE,qBAAK3E,UAAU,8DAAf,SACE,uBAAMmC,SAAUmD,EAAetF,UAAU,kBAAzC,UACE,sBAAKA,UAAU,wCAAf,UACE,oBAAIA,UAAU,oBAAd,wBAEA,wBACED,QAASsI,EACTrI,UAAU,yEAFZ,SAIE,cAAC,IAAD,CAAOA,UAAU,iBAIrB,sBAAKA,UAAU,cAAf,UACE,qBACEA,UAAU,iDACVgB,IAAKoH,EACLlH,IAAI,WAEN,cAAC,IAAD,CACEoB,YAAW,sBACXtC,UAAU,qCACVwC,SAAU,SAACb,IAxDC,SAACA,GACrBsD,EAAQtD,EAAMc,OAAOF,OAwDXoD,CAAchE,IAEhBY,MAAOtC,EACPyC,UAAQ,OAGZ,qBAAK1C,UAAU,uBAAf,SACE,yBACEqC,KAAK,SACLrC,UAAU,uGAFZ,UAIE,0CACA,cAAC,IAAD,CAAYA,UAAU,wBCjGlC0I,KAAMC,cAAc,SAMpB,IAAMC,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,EACTzE,MAAO,MACPD,OAAQ,MACR2E,aAAc,YA8FHC,GA1FF,SAAC,GAAqB,IAAnBzM,EAAkB,EAAlBA,KAAkB,EACQ2D,oBAAkB,GAD1B,mBACzB+I,EADyB,KACXC,EADW,OAEChJ,oBAAkB,GAFnB,mBAEzBiJ,EAFyB,KAEZC,EAFY,KAI1BnM,GADMV,EAAKU,KAAK0D,gBACT5E,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,SAE5C2I,EAAW,WACfsD,GAAiBD,IAOblB,EAAa,WACjBqB,GAAU,IAGZ,OACE,sBAAK1J,UAAU,+BAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBACEA,UAAU,iDACVgB,IAAG,OAAEnE,QAAF,IAAEA,OAAF,EAAEA,EAAMU,KAAK0D,gBAChBC,IAAI,WAEN,gCACE,mBAAGlB,UAAU,sBAAb,SAAoCnD,EAAKU,KAAK4D,aAC9C,oBAAGnB,UAAU,0CAAb,UACGyG,GAAiB5J,EAAKgL,WACvB,cAAC,IAAD,CAAW7H,UAAU,qBAI3B,+BACO,OAAJzC,QAAI,IAAJA,OAAA,EAAAA,EAAMsC,QAAN,OAAchD,QAAd,IAAcA,OAAd,EAAcA,EAAMU,KAAKsC,KACxB,yBACEE,QA5BM,WAChB2J,GAAU,IA4BA1J,UAAU,oEAFZ,iBAKE,cAAC,IAAD,CAAkBA,UAAU,eAE5B,UAGR,qBAAKA,UAAU,wBAAf,SAAwCnD,EAAKoD,OAC5CpD,EAAK8M,WACJ,qBAAK3J,UAAU,sBAAf,SACE,qBACEA,UAAU,6CACVgB,IAAKnE,EAAK8M,UACVzI,IAAI,WAIV,sBAAKlB,UAAU,qCAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,cAAC,EAAD,CAAM+F,MAAOlJ,EAAKkJ,UAEpB,cAAC,EAAD,CAASG,SAAUA,EAAUD,SAAUpJ,EAAKoJ,cAE9C,sBAAKjG,UAAU,wEAAf,UACE,cAAC,GAAD,CAAUoG,OAAQvJ,EAAKgD,MACvB,cAAC,GAAD,CAAaqG,SAAUA,IACtB3I,GAAQA,EAAKsC,MAAQhD,EAAKU,KAAKsC,IAC9B,cAAC,GAAD,CAAYuG,OAAQvJ,EAAKgD,MACvB,QAEL0J,GACC,cAAC,GAAD,CAAUnD,OAAQvJ,EAAKgD,IAAKqI,YAAW,OAAErL,QAAF,IAAEA,OAAF,EAAEA,EAAMoJ,WAGjD,cAAC,KAAD,CACE2D,OAAQH,EACRI,eAAgBxB,EAChByB,MAAOlB,GACPmB,aAAc,gBAJhB,SAME,cAAC,GAAD,CACE3D,OAAQvJ,EAAKgD,IACbuI,QAAO,OAAEvL,QAAF,IAAEA,OAAF,EAAEA,EAAMU,KAAK0D,gBACpBoH,WAAYA,UCxFP2B,GAtBE,SAAC7J,GAChB,IAAM8J,EAAc5N,GAAe,SAACsC,GAAD,OAAWA,EAAMyF,SAASA,YAG7D,OAFgB/H,GAAe,SAACsC,GAAD,OAAWA,EAAMyF,SAASjG,cAIrD,qBAAK6B,UAAU,sBAAf,SACE,cAAC,IAAD,CAAQqC,KAAK,YAAYoC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,OAMhE,mCACGsF,GACCA,EAAY5J,KAAI,SAACxD,GACf,OAAO,cAAC,GAAD,CAAqBA,KAAMA,GAAhBA,EAAKgD,WCRlBqK,GATE,SAAC/J,GAChB,OACE,sBAAKH,UAAU,yBAAf,UACE,cAAC,EAAD,IACA,cAAC,GAAD,QCiBSmK,GAnBQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAExB,OADA3M,QAAQC,IAAI0M,GAEV,sBAAKpK,UAAU,oDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBACEA,UAAU,gDACVgB,IAAG,OAAEoJ,QAAF,IAAEA,OAAF,EAAEA,EAASnJ,gBACdC,IAAI,WAEN,mBAAGlB,UAAU,YAAb,0BAA6BoK,QAA7B,IAA6BA,OAA7B,EAA6BA,EAASjJ,WAAtC,mBAAoDiJ,QAApD,IAAoDA,OAApD,EAAoDA,EAAShJ,UAA7D,UAEF,8BACE,cAAC,EAAD,CAAcwB,cAAa,OAAEwH,QAAF,IAAEA,OAAF,EAAEA,EAASvK,YCW/BwK,GAzBO,SAAClK,GACrB,IAAMmK,EAAiBjO,GACrB,SAACsC,GAAD,uBAAWA,EAAMpB,KAAKA,YAAtB,aAAW,EAAiBsG,mBAExBU,EAAUlI,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKY,cACrD,OACE,sBAAK6B,UAAU,kFAAf,UACE,oBAAIA,UAAU,0BAAd,sCACCuE,GACC,qBAAKvE,UAAU,sBAAf,SACE,cAAC,IAAD,CAAQqC,KAAK,YAAYoC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,QAG9DJ,GACA+F,GACAA,EAAejK,KAAI,SAAC+J,GAClB,OAAO,cAAC,GAAD,CAAkCA,QAASA,GAAtBA,EAAQvK,SAEtC0E,KAAW,OAAC+F,QAAD,IAACA,OAAD,EAACA,EAAgBxJ,SAC5B,mBAAGd,UAAU,eAAb,+CCAOuK,GAlBF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YACd,OACE,sBAAKxK,UAAU,oDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBACEA,UAAU,gDACVgB,IAAG,OAAEwJ,QAAF,IAAEA,OAAF,EAAEA,EAAavJ,gBAClBC,IAAI,WAEN,mBAAGlB,UAAU,YAAb,0BAA6BwK,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAarJ,WAA1C,mBAAwDqJ,QAAxD,IAAwDA,OAAxD,EAAwDA,EAAapJ,UAArE,UAEF,8BACE,cAAC,EAAD,CAAewB,cAAa,OAAE4H,QAAF,IAAEA,OAAF,EAAEA,EAAa3K,YCMpC4K,GApBI,SAACtK,GAClB,IAAMuK,EAAqBrO,GACzB,SAACsC,GAAD,uBAAWA,EAAMpB,KAAKA,YAAtB,aAAW,EAAiBuG,eAG9B,OACE,sBAAK9D,UAAU,kFAAf,UACE,oBAAIA,UAAU,0BAAd,mCAEC0K,GACCA,EAAmBrK,KAAI,SAACmK,GACtB,OAAO,cAAC,GAAD,CAA4BA,YAAaA,GAA9BA,EAAY3K,UAEjC,OAAC6K,QAAD,IAACA,OAAD,EAACA,EAAoB5J,SACpB,mBAAGd,UAAU,eAAb,mDCOO2K,GAlBE,SAACxK,GAChB,OACE,sBAAKH,UAAU,iCAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,qBAAKA,UAAU,QAAf,SACE,cAAC,GAAD,MAEF,sBAAKA,UAAU,QAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,W,SCUO4K,GAtBQ,SAACzK,GAAgC,IACnC0K,EAAiC1K,EAA5C2K,UAAsBxN,EAAsB6C,EAAtB7C,SAAayN,EADU,aACD5K,EADC,0BAGrD,OACE,cAAC,IAAD,2BACM4K,GADN,IAEEC,OAAQ,SAACC,GAAD,OACN3N,EACE,cAACuN,EAAD,eAAeI,IAEf,cAAC,IAAD,CACEtK,GAAI,CACFuK,SAAU,IACVvM,MAAO,CAAEwM,KAAMF,EAAWG,kBCwDzBC,GAtEK,SAAClL,GACnB,IAAM5C,EAAOlB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QADd,EAEIiD,mBAAc,IAFlB,mBAE7B8K,EAF6B,KAEfC,EAFe,KAG9BlO,EAAQH,aAAawC,QAAQ,SAC7B0F,EAAMC,iBAAgC,MACtC9F,EAAWpD,IAQXmJ,EAAa,uCAAG,WAAOC,GAAP,eAAA5I,EAAA,yDACpB4I,EAAE3D,kBACEvE,EAFgB,uBAGZD,EAAO,IAAIoI,UACZC,OAAO,OAAQ6F,GACpB7N,QAAQC,IAAIN,GALM,SAMZR,IAAMC,KAAK,gCAAiCO,EAAM,CACtDW,QAAS,CACP,eAAgB,sBAChBC,cAAeX,KATD,OAYd+H,EAAIM,UACNN,EAAIM,QAAQnD,MAAQ,IAEtBhD,EAAS1B,EAAWR,IAfF,2CAAH,sDAkBnB,OACE,qBAAK2C,UAAU,0CAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,qBACEA,UAAU,wEACVgB,IAAG,OAAEzD,QAAF,IAAEA,OAAF,EAAEA,EAAM0D,gBACXC,IAAI,WAEN,oBAAIlB,UAAU,uBAAd,0BAAyCzC,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAM4D,WAA/C,mBAA6D5D,QAA7D,IAA6DA,OAA7D,EAA6DA,EAAM6D,aACnE,sBACEe,SAAU,SAACoD,GACTD,EAAcC,IAFlB,SAKE,sBAAKvF,UAAU,uDAAf,UACE,sBAAKA,UAAU,4CAAf,UACE,uBAAOA,UAAU,oBAAjB,gEAGA,uBACEqC,KAAK,OACL7D,KAAK,OACLgE,SAAU,SAACb,IA9CD,SAACA,GAClBA,EAAMc,OAAOmD,QAClBnI,QAAQC,IAAIiE,EAAMc,OAAOmD,OACzB2F,EAAgB5J,EAAMc,OAAOmD,MAAM,KA4CrB4F,CAAgB7J,IAElByD,IAAKA,OAIT,wBAAQ/C,KAAK,SAASrC,UAAU,yBAAhC,oCC1CGyL,GAnBC,SAACtL,GACf,IAAM5C,EAAOlB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKA,QAElD,OACE,sBAAKyC,UAAU,kCAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,GAAD,MAEDzC,IAAI,OACHA,QADG,IACHA,OADG,EACHA,EAAM4G,MAAM9D,KAAI,SAACxD,GAEf,OADAY,QAAQC,IAAIb,GACL,cAAC,GAAD,CAAqBA,KAAMA,GAAhBA,EAAKgD,WAG1B,OAACtC,QAAD,IAACA,OAAD,EAACA,EAAM4G,MAAMrD,SAAU,uDCqGf4K,GApHE,SAACvL,GAAkB,IAAD,EACGK,mBAAiB,IADpB,mBAC1BW,EAD0B,KACdwK,EADc,OAECnL,mBAAiB,IAFlB,mBAE1BY,EAF0B,KAEfwK,EAFe,OAGPpL,mBAAiB,IAHV,mBAG1B1D,EAH0B,KAGnBwE,EAHmB,OAIDd,mBAAiB,IAJhB,mBAI1BzD,EAJ0B,KAIhBwE,EAJgB,OAKPf,mBAAiB,IALV,mBAK1BqL,EAL0B,KAKnBC,EALmB,OAMDtL,oBAAkB,GANjB,mBAM1BuL,EAN0B,KAMhBC,EANgB,KAO3B1G,EAAa,uCAAG,WAAO3D,GAAP,eAAAhF,EAAA,6DACpBgF,EAAMC,iBADc,kBAGChF,IAAMC,KAAN,oBAAgC,CACjDsE,aACAC,YACAtE,QACAC,aAPgB,OAGZK,EAHY,OASlBK,QAAQC,IAAIN,GACZ4O,GAAaD,GAVK,gDAYlBD,EAAS,KAAM9O,SAASI,KAAK6O,KAZX,yDAAH,sDAgBnB,OAAIF,EACK,cAAC,IAAD,CAAUpL,GAAG,MAGpB,qBAAKX,UAAU,+BAAf,SACE,sBAAKA,UAAU,oDAAf,UACE,oBAAIA,UAAU,0BAAd,sBACA,sBACEmC,SAAU,SAACR,GACT2D,EAAc3D,IAFlB,SAKE,sBAAK3B,UAAU,sBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,aAAf,SACE,6CAEF,uBACEpC,UAAU,yBACVqC,KAAK,OACLC,YAAY,mBACZ9D,KAAK,aACL+D,MAAOpB,EACPqB,SAAU,SAACb,GACTgK,EAAchK,EAAMc,OAAOF,QAE7BG,UAAQ,OAGZ,sBAAK1C,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,YAAf,SACE,4CAEF,uBACEpC,UAAU,yBACVqC,KAAK,OACLC,YAAY,kBACZ9D,KAAK,YACL+D,MAAOnB,EACPoB,SAAU,SAACb,GACTiK,EAAajK,EAAMc,OAAOF,QAE5BG,UAAQ,OAGZ,sBAAK1C,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,QAAf,SACE,wCAEF,uBACEpC,UAAU,yBACVqC,KAAK,QACLC,YAAY,cACZ9D,KAAK,QACL+D,MAAOzF,EACP0F,SAAU,SAACb,GACTL,EAASK,EAAMc,OAAOF,QAExBG,UAAQ,OAGZ,sBAAK1C,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,WAAf,SACE,2CAEF,uBACEpC,UAAU,yBACVqC,KAAK,WACLC,YAAY,iBACZ9D,KAAK,WACL+D,MAAOxF,EACPyF,SAAU,SAACb,GACTJ,EAAYI,EAAMc,OAAOF,QAE3BG,UAAQ,OAGXmJ,GAAS,sBAAM7L,UAAU,eAAhB,SAAgC6L,IAC1C,qBAAK7L,UAAU,cAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,+CAFZ,mCC/Fd0I,KAAMC,cAAc,SAqCLuD,OAnCf,WACE,IAAM5O,EAAWjB,GAAe,SAACsC,GAAD,OAAWA,EAAMpB,KAAKD,YAChDiC,EAAWpD,IASjB,OAPAqI,qBAAU,WACR,IAAM5G,EAAeV,aAAawC,QAAQ,gBACtC9B,GACF2B,EAAS5B,EAAUC,MAEpB,IAGD,cAAC,IAAD,UACE,sBAAKoC,UAAU,iCAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmM,OAAK,EAACC,KAAK,IAAItB,UAAWzJ,IACjC,cAAC,IAAD,CAAO8K,OAAK,EAACC,KAAK,YAAYtB,UAAWY,KACzC,cAAC,GAAD,CACES,OAAK,EACLrB,UAAWH,GACXyB,KAAK,YACL9O,SAAUA,IAEZ,cAAC,GAAD,CACEwN,UAAWW,GACXW,KAAK,WACL9O,SAAUA,aC9BF+O,QACW,cAA7BC,OAAOlB,SAASmB,UAEa,UAA7BD,OAAOlB,SAASmB,UAEhBD,OAAOlB,SAASmB,SAASC,MACvB,2DCbG,IAAMC,GAAQC,YAAe,CAClCC,QAAS,CACPpP,KAAMqP,EACN5I,SAAU6I,EACVzI,SAAU0I,KCAdlQ,IAAMmQ,SAASC,QAAU,0CAEzBC,IAASjC,OACP,cAAC,IAAD,CAAUyB,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFS,SAASC,eAAe,SF4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA7B,GACLpO,QAAQoO,MAAMA,EAAM8B,a","file":"static/js/main.194d259e.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from './store'\nimport axios from 'axios'\n\n\n\nexport const loginUserLocal = createAsyncThunk('user/loginLocal', async(formData:formData, thunkAPI)=>{\n  try {\n      const response = await axios.post(\"https://warm-falls-67590.herokuapp.com/api/user/login\",{email: formData.email,password: formData.password})\n\n      if (response.status === 200) {\n          localStorage.setItem('token', response.data.token)\n          return {...response.data, loggedIn:true, user: response.data.user}\n      } else {\n          return thunkAPI.rejectWithValue(response.data)\n      }\n  } catch (err) {\n      console.log('Error', err.response.data);\n      return thunkAPI.rejectWithValue(err.response.data);\n  }\n})\n\nexport const loginUser  = createAsyncThunk('user/login', async(access_token: string, thunkAPI)=>{\n    try {\n        const response = await axios.post(\"https://warm-falls-67590.herokuapp.com/api/user/oauth/facebook\",{access_token})\n\n        if (response.status === 200) {\n            localStorage.setItem('token', response.data.token)\n            return {...response.data, loggedIn:true, user: response.data.user}\n        } else {\n            return thunkAPI.rejectWithValue(response.data)\n        }\n    } catch (err) {\n        console.log('Error', err.response.data);\n        return thunkAPI.rejectWithValue(err.response.data);\n    }\n})\n\n\nexport const updateUser = createAsyncThunk('user/update', async(token: string, thunkAPI)=>{\n  try {\n      const response = await axios.get(\"https://warm-falls-67590.herokuapp.com/api/user/updateUser\",{\n        headers: { Authorization: token },\n      })\n\n      if (response.status === 200) {\n          return {...response.data, user: response.data.user}\n      } else {\n          return thunkAPI.rejectWithValue(response.data)\n      }\n  } catch (err) {\n      console.log('Error', err.response.data);\n      return thunkAPI.rejectWithValue(err.response.data);\n  }\n})\n\nexport interface formData {\n  email:string; password:string\n}\n\nexport interface User {\n  _id: string;\n  posts: any[];\n  friends: any[];\n  friend_send: any[];\n  friend_requests: any[];\n  first_name: string;\n  last_name: string;\n  email: string;\n  profile_img_url: string;\n  facebook_id: string;\n  notifications: any[];\n}\n\ninterface UserState {\n    loggedIn:boolean;\n    user?: User;\n    isFetching: boolean;\n    isSuccess:boolean;\n    isError:boolean;\n  }\n\n\n  const initialState: UserState = {\n    loggedIn: false,\n    user: undefined,\n    isFetching: false,\n    isSuccess:false,\n    isError:false,\n  }\n\n  export const userSlice = createSlice({\n    name: 'user',\n    // `createSlice` will infer the state type from the `initialState` argument\n    initialState,\n    reducers: {\n        logOut: (state) =>{\n            localStorage.clear();\n            state = initialState;\n            return state;\n        }\n    },\n    extraReducers:(builder)=>{\n        builder.addCase(loginUser.fulfilled, (state, { payload }) => {\n            state.user = payload.user;\n            state.loggedIn = payload.loggedIn;\n            state.isFetching = false;\n            state.isSuccess = true;\n            return state;\n          })\n        builder.addCase(loginUser.rejected, (state, { payload }) => {\n            state.isFetching = false;\n            state.isError = true;\n          })\n        builder.addCase(loginUser.pending,(state) => {\n            state.isFetching = true;\n          })\n          builder.addCase(updateUser.fulfilled, (state,{payload})=>{\n            state.user = payload.user\n          })\n          builder.addCase(loginUserLocal.fulfilled, (state, { payload }) => {\n            state.user = payload.user;\n            state.loggedIn = payload.loggedIn;\n            state.isFetching = false;\n            state.isSuccess = true;\n            return state;\n          })\n        builder.addCase(loginUserLocal.rejected, (state, { payload }) => {\n            state.isFetching = false;\n            state.isError = true;\n          })\n        builder.addCase(loginUserLocal.pending,(state) => {\n            state.isFetching = true;\n          })\n    }\n  })\n\n\n\n  export const { logOut } = userSlice.actions\n\n\n  export default userSlice.reducer","import axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  notification: any;\n}\n\nconst NotificationItem = ({ notification }: Props) => {\n  const dispatch = useAppDispatch();\n  const notificationStatus = notification.unread;\n  const token = localStorage.getItem('token');\n  const readNotification = () => {\n    if (token) {\n      axios.delete(`api/notification/${notification._id}/read`, {\n        headers: { Authorization: token },\n      });\n      dispatch(updateUser(token));\n    }\n  };\n\n  const whatToReturn = () => {\n    if (notificationStatus) {\n      return unread();\n    } else {\n      return read();\n    }\n  };\n\n  const read = () => {\n    return (\n      <div\n        onClick={readNotification}\n        className=\"bg-gray-600 rounded w-full p-2 mx-2 my-1\"\n      >\n        {notification.text}\n        <span className=\"p-1 bg-blue-800 rounded mx-2\">Read</span>\n      </div>\n    );\n  };\n\n  const unread = () => {\n    return (\n      <div\n        onClick={readNotification}\n        className=\"bg-gray-700 rounded w-full p-2 mx-2 my-1\"\n      >\n        {notification.text}\n        <span className=\"p-1 bg-red-800 rounded mx-2\">Unread</span>\n      </div>\n    );\n  };\n\n  return <>{whatToReturn()}</>;\n};\n\nexport default NotificationItem;\n","import React from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport NotificationItem from './NotificationItem';\n\ninterface Props {}\n\nconst Notification = (props: Props) => {\n  const notifications = useAppSelector(\n    (state) => state.user.user?.notifications\n  );\n\n  return (\n    <div className=\"absolute bg-gray-500 w-96 h-96 overflow-auto rounded flex flex-col p-1 items-center\">\n      {notifications &&\n        notifications?.map((item) => {\n          return <NotificationItem key={item._id} notification={item} />;\n        })}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport { useAppSelector } from '../redux/hooks';\nimport { LogoutIcon } from '@heroicons/react/solid';\nimport { useAppDispatch } from '../redux/hooks';\nimport { logOut } from '../redux/userSlice';\nimport { Link } from 'react-router-dom';\nimport { BellIcon } from '@heroicons/react/solid';\nimport Notification from './notifications/Notification';\ninterface Props {}\n\nconst Header = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const loggedIn = useAppSelector((state) => state.user.loggedIn);\n  const user = useAppSelector((state) => state.user.user);\n  const [show, setShow] = useState(false);\n\n  const logOutFunction = () => {\n    dispatch(logOut());\n  };\n\n  const onlyUnreadCount = () => {\n    const notification = user?.notifications;\n    const unreadNotifications = notification?.filter(\n      (item) => item.unread !== false\n    );\n    if (unreadNotifications) return unreadNotifications.length;\n  };\n\n  const clickHandler = () => {\n    setShow(!show);\n  };\n\n  return (\n    <header className=\"flex flex-row justify-between items-center px-7 py-3 bg-gray-800\">\n      <Link to=\"/odinbook\">\n        <h1 className=\"font-bold text-4xl\">\n          The <span className=\"text-red-600\">Odin</span>book\n        </h1>\n      </Link>\n\n      <div className=\"flex items-center justify-center space-x-5\">\n        {!loggedIn && (\n          <h2 className=\"font-bold text-xl text-red-600 \">\n            No user is logged in!\n          </h2>\n        )}\n        {loggedIn && (\n          <>\n            <div className=\"relative\">\n              <div>\n                <button onClick={clickHandler} className=\"flex items-center\">\n                  <BellIcon className=\"h-7 w-7 text-red-700\" />\n                  {onlyUnreadCount()}\n                </button>\n              </div>\n              {show && <Notification />}\n            </div>\n\n            <Link to=\"/profile\">\n              <span className=\"font-semibold text-xl px-4 py-2 hov border-2 hover:bg-red-500 transform hover:scale-105 border-red-500 \">\n                Profile\n              </span>\n            </Link>\n\n            <div className=\"flex items-center\">\n              <img\n                className=\"inline object-cover w-12 h-12 mr-2 rounded-full\"\n                src={user?.profile_img_url}\n                alt=\"avatar\"\n              />\n              <h2 className=\"font-bold text-xl \">{`${user?.first_name} ${user?.last_name}`}</h2>\n            </div>\n\n            <button\n              onClick={logOutFunction}\n              className=\"bg-red-600 hover:bg-red-700 p-1 rounded flex items-center justify-center ml-2\"\n            >\n              <LogoutIcon className=\"text-white h-5 w-5 mr-2\" />\n              <span>Log out</span>\n            </button>\n          </>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport { loginUser, loginUserLocal } from '../redux/userSlice';\n\ninterface Props {\n  history: any;\n}\n\nconst fb_ID: string = process.env.REACT_APP_FB_ID as string;\n\nconst Login = (props: Props) => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n\n  const dispatch = useAppDispatch();\n  const loggedIn = useAppSelector((state) => state.user.loggedIn);\n\n  const responseFacebook = async (response: any) => {\n    const access_token: string = response.accessToken;\n    localStorage.setItem('access_token', access_token);\n    dispatch(loginUser(access_token));\n  };\n\n  const localLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const formData = { email, password };\n    dispatch(loginUserLocal(formData));\n  };\n\n  if (loggedIn) {\n    return <Redirect to=\"/odinbook\" />;\n  }\n\n  return (\n    <div className=\"flex justify-center \">\n      <div className=\"bg-gray-800 mt-32 p-32 mx-20 flex justify-center flex-col items-center text-lg rounded-xl shadow w-1/2\">\n        <p>To login to the Odinbook, click the button bellow.</p>\n        <FacebookLogin\n          appId={fb_ID}\n          autoLoad={false}\n          fields=\"name,email,picture\"\n          callback={responseFacebook}\n          cssClass=\"bg-blue-600 rounded p-3 hover:bg-blue-800 mt-4 \"\n        />\n        <span className=\"text-red-500 font-semibold\">\n          This is disabled, as for this to work facebook app needs to be in\n          production or you need to be beta tester.\n        </span>\n      </div>\n      <div className=\"w-1/2 mx-20 mt-32 bg-gray-800 rounded p-6 \">\n        <p>You already registered? Log in bellow!</p>\n\n        <h2 className=\"font-bold text-2xl my-5\">Login</h2>\n\n        <form onSubmit={localLogin}>\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"email\">\n                <b>Email</b>\n              </label>\n              <input\n                className=\"p-2 rounded text-black\"\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                name=\"email\"\n                value={email}\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n                required\n              />\n            </div>\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"password\">\n                <b>Password</b>\n              </label>\n              <input\n                className=\"p-2 rounded text-black\"\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                value={password}\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                required\n              />\n            </div>\n            <div className=\"w-full mt-2\">\n              <button type=\"submit\" className=\"w-full bg-blue-500 rounded p-2\">\n                Log in\n              </button>{' '}\n            </div>\n          </div>\n        </form>\n        <div className=\"pt-5\">\n          <p>If not registered? Click bellow!</p>\n          <Link to=\"/register\">\n            <button className=\"w-full bg-red-500 rounded p-2\">Register</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { MailIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  secondUser_id?: string;\n  loggedUser_id?: string;\n}\n\nconst SendRequest = ({ secondUser_id, loggedUser_id }: Props) => {\n  const dispatch = useAppDispatch();\n\n  const sendFriendRequest = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const response = await axios.post(\n          `/api/user/${secondUser_id?.toString()}/send-request`,\n          null,\n          {\n            headers: { Authorization: token },\n          }\n        );\n        dispatch(updateUser(token));\n        console.log(response);\n      }\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n  return (\n    <>\n      <button\n        onClick={sendFriendRequest}\n        className=\"bg-green-600 hover:bg-green-700 p-1 rounded flex items-center justify-center ml-2\"\n      >\n        <MailIcon className=\"text-white h-5 w-5\" />\n        <span>Send friend request</span>\n      </button>\n    </>\n  );\n};\n\nexport default SendRequest;\n","import React from 'react';\nimport { XCircleIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  secondUser_id?: string;\n}\n\nconst CancelRequest = ({ secondUser_id }: Props) => {\n  const dispatch = useAppDispatch();\n  const loggedIn = useAppSelector((state) => state.user.loggedIn);\n\n  const cancelFriendRequest = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      if (token && loggedIn) {\n        const response = await axios.delete(\n          `/api/user/${secondUser_id}/unsend-friend`,\n          { headers: { Authorization: token } }\n        );\n        dispatch(updateUser(token));\n        console.log('cancel', response);\n      }\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={cancelFriendRequest}\n        className=\"bg-red-600 hover:bg-red-700 p-1 rounded flex items-center justify-center ml-2\"\n      >\n        <XCircleIcon className=\"text-white h-5 w-5\" />\n        <span>Unsend Request</span>\n      </button>\n    </>\n  );\n};\n\nexport default CancelRequest;\n","import React from 'react';\nimport { TrashIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  secondUser_id?: string;\n}\n\nconst RemoveFriend = ({ secondUser_id }: Props) => {\n  const dispatch = useAppDispatch();\n  const loggedIn = useAppSelector((state) => state.user.loggedIn);\n\n  const removeFriendRequest = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      if (token && loggedIn) {\n        const response = await axios.delete(\n          `/api/user/${secondUser_id}/remove-friend`,\n          { headers: { Authorization: token } }\n        );\n        dispatch(updateUser(token));\n        console.log('remove', response);\n      }\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={removeFriendRequest}\n        className=\"bg-red-600 hover:bg-red-700 p-1 rounded flex items-center justify-center ml-2\"\n      >\n        <TrashIcon className=\"text-white h-5 w-5\" />\n        <span>Remove friend</span>\n      </button>\n    </>\n  );\n};\n\nexport default RemoveFriend;\n","import React from 'react';\nimport { CheckCircleIcon, TrashIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  secondUser_id?: string;\n}\n\nconst ReplyRequest = ({ secondUser_id }: Props) => {\n  const dispatch = useAppDispatch();\n  const loggedIn = useAppSelector((state) => state.user.loggedIn);\n\n  const cancelFriend = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      if (token && loggedIn) {\n        const response = await axios.delete(\n          `/api/user/${secondUser_id}/cancel-friend`,\n          { headers: { Authorization: token } }\n        );\n        console.log('cancel', response);\n        dispatch(updateUser(token));\n      }\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  const acceptFriend = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      if (token && loggedIn) {\n        const response = await axios.put(\n          `/api/user/${secondUser_id}/accept-friend`,\n          null,\n          { headers: { Authorization: token } }\n        );\n\n        dispatch(updateUser(token));\n        console.log('cancel', response);\n      }\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n  return (\n    <>\n      <button\n        onClick={acceptFriend}\n        className=\"bg-blue-600 hover:bg-blue-700 p-1 rounded flex items-center justify-center ml-2\"\n      >\n        <CheckCircleIcon className=\"text-white h-5 w-5\" />\n        <span>Accept</span>\n      </button>\n      <button\n        onClick={cancelFriend}\n        className=\"bg-red-600 hover:bg-red-700 p-1 rounded flex items-center justify-center ml-2\"\n      >\n        <TrashIcon className=\"text-white h-5 w-5\" />\n        <span>Cancel</span>\n      </button>\n    </>\n  );\n};\n\nexport default ReplyRequest;\n","import React from 'react';\nimport { User } from '../redux/userSlice';\nimport { useAppSelector } from '../redux/hooks';\nimport SendRequest from './otheruser/SendRequest';\nimport CancelRequest from './otheruser/CancelRequest';\nimport RemoveFriend from './otheruser/RemoveFriend';\nimport ReplyRequest from './otheruser/ReplyRequest';\n\ninterface Props {\n  user?: User;\n}\n\nconst OtherUser = ({ user }: Props) => {\n  const loggedUser = useAppSelector((state) => state.user.user);\n  const id = loggedUser?._id;\n\n  return (\n    <div className=\"bg-gray-900 rounded flex justify-between mt-2 p-2\">\n      <div className=\"flex items-center\">\n        <img\n          className=\"inline object-cover w-8 h-8 rounded-full mr-2\"\n          src={user?.profile_img_url}\n          alt=\"avatar\"\n        />\n        <p className=\"text-base\">{`${user?.first_name} ${user?.last_name} `}</p>\n      </div>\n      <div>\n        {user?.friends.includes(id) && (\n          <RemoveFriend secondUser_id={user?._id} />\n        )}\n\n        {!user?.friend_requests.includes(id) &&\n          !user?.friend_send.includes(id) &&\n          !user?.friends.includes(id) && (\n            <SendRequest\n              secondUser_id={user?._id}\n              loggedUser_id={loggedUser?._id}\n            />\n          )}\n\n        {user?.friend_send.includes(id) && (\n          <ReplyRequest secondUser_id={user?._id} />\n        )}\n\n        {user?.friend_requests.includes(id) && (\n          <CancelRequest secondUser_id={user?._id} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OtherUser;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from './store'\nimport axios from 'axios'\n\n\nexport const getAllUsers  = createAsyncThunk('all/users', async(token: string, thunkAPI)=>{\n    try {\n        const response = await axios.get(\"https://warm-falls-67590.herokuapp.com/api/user/allUsers\",{\n            headers: { Authorization: token },\n          })\n\n        if (response.status === 200) {\n            const allUsers = response.data.allUsers;\n            return {...response.data,  allUsers: allUsers}\n        } else {\n            return thunkAPI.rejectWithValue(response.data)\n        }\n    } catch (err) {\n        console.log('Error', err.response.data);\n        return thunkAPI.rejectWithValue(err.response.data);\n    }\n})\n\n\n\n\ninterface UserState {\n    allUsers?:any[];\n    isFetching: boolean;\n    isSuccess:boolean;\n    isError:boolean;\n  }\n\n\n  const initialState: UserState = {\n    allUsers:undefined,\n    isFetching: false,\n    isSuccess:false,\n    isError:false,\n  }\n\n  export const allUsersSlice = createSlice({\n    name: 'allUsers',\n    // `createSlice` will infer the state type from the `initialState` argument\n    initialState,\n    reducers: {\n\n    },\n    extraReducers:(builder)=>{\n        builder.addCase(getAllUsers.fulfilled, (state, { payload }) => {\n            state.allUsers = payload.allUsers;\n            state.isFetching = false;\n            state.isSuccess = true;\n            return state;\n          })\n        builder.addCase(getAllUsers.rejected, (state, { payload }) => {\n            state.isFetching = false;\n            state.isError = true;\n          })\n        builder.addCase(getAllUsers.pending,(state) => {\n            state.isFetching = true;\n          })\n    }\n  })\n\n  export default allUsersSlice.reducer","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from './store'\nimport axios from 'axios'\n\n\nexport const getAllPosts  = createAsyncThunk('all/posts', async(token: string, thunkAPI)=>{\n    try {\n        const response = await axios.get(\"https://warm-falls-67590.herokuapp.com/api/posts/all\",{\n            headers: { Authorization: token },\n          })\n\n        if (response.status === 200) {\n            const posts = response.data.posts;\n            return {...response.data,  posts: posts}\n        } else {\n            return thunkAPI.rejectWithValue(response.data)\n        }\n    } catch (err) {\n        console.log('Error', err.response.data);\n        return thunkAPI.rejectWithValue(err.response.data);\n    }\n})\n\n\n\n\n\n\n\ninterface PostsState {\n    allPosts?:any[];\n    isFetching: boolean;\n    isSuccess:boolean;\n    isError:boolean;\n  }\n\n\n  const initialState: PostsState = {\n    allPosts:undefined,\n    isFetching: false,\n    isSuccess:false,\n    isError:false,\n  }\n\n  export const allPostsSlice = createSlice({\n    name: 'allPosts',\n    // `createSlice` will infer the state type from the `initialState` argument\n    initialState,\n    reducers: {\n\n    },\n    extraReducers:(builder)=>{\n        builder.addCase(getAllPosts.fulfilled, (state, { payload }) => {\n            state.allPosts = payload.posts;\n            state.isFetching = false;\n            state.isSuccess = true;\n            return state;\n          })\n        builder.addCase(getAllPosts.rejected, (state, { payload }) => {\n            state.isFetching = false;\n            state.isError = true;\n          })\n        builder.addCase(getAllPosts.pending,(state) => {\n            state.isFetching = true;\n          })\n    }\n  })\n\n  export default allPostsSlice.reducer","import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport OtherUser from './OtherUser';\nimport { getAllUsers } from '../redux/allUsersSlice';\nimport { getAllPosts } from '../redux/postsSlice';\nimport Loader from 'react-loader-spinner';\n\ninterface Props {}\n\nconst AllUsers = (props: Props) => {\n  // const [users, setUsers] = useState<any[]>([]);\n  const dispatch = useAppDispatch();\n  const loggedUser = useAppSelector((state) => state.user.user);\n  const loggedIn = useAppSelector((state) => state.user.loggedIn);\n  const allUsers = useAppSelector((state) => state.allUsers.allUsers);\n  const token = localStorage.getItem('token');\n  const loading = useAppSelector((state) => state.allUsers.isFetching);\n\n  useEffect(() => {\n    if (loggedIn && token) {\n      dispatch(getAllUsers(token));\n      dispatch(getAllPosts(token));\n    }\n  }, [loggedUser]);\n\n  return (\n    <div className=\"bg-gray-800 bg-opacity-90 m-2 rounded h-2/5 p-2 text-white shadow overflow-auto\">\n      <h3 className=\"font-bold mb-1 text-lg \">All users:</h3>\n      {loading && (\n        <div className=\"flex justify-center\">\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      )}\n      {!loading &&\n        allUsers &&\n        allUsers.map((user) => {\n          return <OtherUser key={user._id} user={user} />;\n        })}\n    </div>\n  );\n};\n\nexport default AllUsers;\n","import React from 'react';\nimport { User } from '../../redux/userSlice';\nimport RemoveFriend from '../otheruser/RemoveFriend';\n\ninterface Props {\n  friend: User;\n}\n\nconst Friend = ({ friend }: Props) => {\n  return (\n    <div className=\"bg-gray-900 rounded flex justify-between mt-2 p-2\">\n      <div className=\"flex items-center\">\n        <img\n          className=\"inline object-cover w-8 h-8 rounded-full mr-2\"\n          src={friend?.profile_img_url}\n          alt=\"avatar\"\n        />\n        <p className=\"text-base\">{`${friend?.first_name} ${friend?.last_name} `}</p>\n      </div>\n      <div>\n        <RemoveFriend secondUser_id={friend?._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default Friend;\n","import React from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport Friend from './Friend';\nimport Loader from 'react-loader-spinner';\n\ninterface Props {}\n\nconst FriendList = (props: Props) => {\n  const friendList = useAppSelector((state) => state.user.user?.friends);\n  const loading = useAppSelector((state) => state.user.isFetching);\n  return (\n    <div className=\"bg-gray-800 bg-opacity-90 m-2 rounded h-2/5 p-2 text-white shadow overflow-scroll\">\n      <h3 className=\"font-bold mb-1 text-lg \">Friends:</h3>\n      {loading && (\n        <div className=\"flex justify-center\">\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      )}\n      {!loading &&\n        friendList &&\n        friendList.map((friend) => {\n          return <Friend key={friend._id} friend={friend} />;\n        })}\n      {!friendList?.length && (\n        <p className=\"text-red-500\">You have no friends!</p>\n      )}\n    </div>\n  );\n};\n\nexport default FriendList;\n","import React, { useState, useRef } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { MailIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { updateUser } from '../../redux/userSlice';\nimport TextareaAutosize from 'react-textarea-autosize';\n\ninterface Props {}\n\nconst NewPost = (props: Props) => {\n  const [text, setText] = useState<string>('');\n  const token = localStorage.getItem('token');\n  const [image, setImage] = useState<any>(null);\n  const ref = useRef<HTMLInputElement | null>(null);\n  const dispatch = useAppDispatch();\n\n  const changeHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(event.target.value);\n  };\n\n  const postImageHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files) return;\n    setImage(event.target.files[0]);\n  };\n\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      if (token && text.length > 0 && !image) {\n        console.log('samo text');\n        await axios.post(\n          'api/posts/newPost',\n          { text: text },\n          { headers: { Authorization: token } }\n        );\n        dispatch(updateUser(token));\n        setText('');\n      }\n      if (token && image && text.length > 0) {\n        console.log('file');\n        const data = new FormData();\n\n        data.append('text', text);\n        data.append('file', image);\n        await axios.post('api/posts/newPost', data, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            Authorization: token,\n          },\n        });\n\n        setText('');\n        setImage(null);\n        if (ref.current) {\n          ref.current.value = '';\n        }\n\n        dispatch(updateUser(token));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const user = useAppSelector((state) => state.user.user);\n  return (\n    <div className=\"bg-gray-800 m-2 rounded p-2 flex flex-col \">\n      <form\n        onSubmit={(event) => {\n          submitHandler(event);\n        }}\n      >\n        <div className=\"flex\">\n          <img\n            className=\"inline object-cover w-9 h-9  mr-2 rounded-full\"\n            src={user?.profile_img_url}\n            alt=\"avatar\"\n          />\n\n          <TextareaAutosize\n            placeholder={`What are you thinking about, ${user?.first_name}`}\n            className=\"w-full bg-gray-500 rounded-2xl p-1\"\n            onChange={(event) => {\n              changeHandler(event);\n            }}\n            value={text}\n            required\n          />\n        </div>\n        <div className=\"pt-3 flex justify-between items-center\">\n          <button\n            type=\"submit\"\n            className=\"bg-green-700 p-2 flex rounded items-center justify-items-center\"\n          >\n            <MailIcon className=\"h-5 w-5 mr-2\" />\n            <span>Send Post</span>\n          </button>\n          <div>\n            <input\n              type=\"file\"\n              name=\"file\"\n              id=\"file\"\n              onChange={(event) => {\n                postImageHandler(event);\n              }}\n              ref={ref}\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default NewPost;\n","import React from 'react';\nimport { ThumbUpIcon } from '@heroicons/react/solid';\n\ninterface Props {\n  likes: any[];\n}\n\nconst Like = ({ likes }: Props) => {\n  return (\n    <>\n      <button>\n        <ThumbUpIcon className=\"h-5 w-5 hover:text-blue-400\" />\n      </button>\n      <div className=\"bg-gray-700 rounded-full h-5 w-5 p-3 flex justify-center items-center\">\n        {likes.length}\n      </div>\n    </>\n  );\n};\n\nexport default Like;\n","import React from 'react';\n\ninterface Props {\n  comments: any[];\n  showHide: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Comment = ({ comments, showHide }: Props) => {\n  return (\n    <>\n      <button onClick={showHide}>\n        <p className=\"text-gray-400 hover:text-gray-500\">\n          {comments.length} comments\n        </p>\n      </button>\n    </>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport { ThumbUpIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { getAllPosts } from '../../redux/postsSlice';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  postId: string;\n}\n\nconst LikePost = ({ postId }: Props) => {\n  const token = localStorage.getItem('token');\n  const dispatch = useAppDispatch();\n  const likePost = async () => {\n    try {\n      if (token) {\n        await axios.put(`/api/posts/${postId}/like`, null, {\n          headers: { Authorization: token },\n        });\n        dispatch(updateUser(token));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <button\n      onClick={likePost}\n      className=\"flex items-center hover:bg-gray-700 hover:text-gray-500 px-20 py-2 rounded\"\n    >\n      <ThumbUpIcon className=\"h-5 w-5\" />\n      like\n    </button>\n  );\n};\n\nexport default LikePost;\n","import React from 'react';\nimport { ChatAlt2Icon } from '@heroicons/react/solid';\n\ninterface Props {\n  showHide: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst CommentPost = ({ showHide }: Props) => {\n  return (\n    <button\n      onClick={showHide}\n      className=\"flex items-center hover:bg-gray-700 hover:text-gray-500 px-20 py-2 rounded\"\n    >\n      <ChatAlt2Icon className=\"h-5 w-5\" />\n      comments\n    </button>\n  );\n};\n\nexport default CommentPost;\n","import React from 'react';\nimport { TrashIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  postId: string;\n}\n\nconst DeletePost = ({ postId }: Props) => {\n  const token = localStorage.getItem('token');\n  const dispatch = useAppDispatch();\n  const deletePost = async () => {\n    try {\n      if (token) {\n        await axios.delete(`api/posts/${postId}/remove`, {\n          headers: { Authorization: token },\n        });\n        dispatch(updateUser(token));\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <button\n      onClick={deletePost}\n      className=\"flex items-center hover:bg-gray-700 hover:text-gray-500 px-20 py-3 rounded\"\n    >\n      <TrashIcon className=\"h-5 w-5\" />\n      delete\n    </button>\n  );\n};\n\nexport default DeletePost;\n","import { DateTime } from 'ts-luxon';\n\nconst timeFromPostTime = (time: string) => {\n    const start = DateTime.now();\n    const createdAtPost = DateTime.fromISO(time);\n\n    const differenceBetween = start.diff(createdAtPost, 'minutes');\n    let obj = differenceBetween?.toObject();\n\n    if (obj) {\n      let minutes = obj.minutes;\n      if (minutes === undefined) {\n        return null;\n      }\n      if (minutes < 3) {\n        return `Now... `;\n      }\n      if (minutes < 60) {\n        return `${Math.round(minutes)}m `;\n      }\n      if (minutes > 60) {\n        const hours = differenceBetween.shiftTo('hours').toObject();\n        let time = hours.hours ?? undefined;\n\n        if (time) {\n          let round = Math.round(time);\n          if (round <= 24) {\n            return `${round}h`;\n          } else {\n            const days = differenceBetween.shiftTo('days', 'hours').toObject();\n            let time = days.days ?? undefined;\n            let hours = days.hours ?? undefined;\n\n            if (time && hours) {\n              return `${time}d${Math.round(hours)}h`;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  };\n\n  export default timeFromPostTime","import React from 'react';\nimport timeFromPostTime from '../../helper';\nimport { updateUser, User } from '../../redux/userSlice';\nimport { ClockIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport axios from 'axios';\n\ninterface Comment {\n  _id: string;\n  likes: any[];\n  text: string;\n  user: User;\n  createdAt: string;\n}\n\ninterface Props {\n  comment: Comment;\n  postId: string;\n}\n\nconst CommentItem = ({ comment, postId }: Props) => {\n  const user = useAppSelector((state) => state.user.user);\n  const token = localStorage.getItem('token');\n  const dispatch = useAppDispatch();\n\n  const deleteComment = async () => {\n    try {\n      if (token) {\n        await axios.delete(\n          `api/post/${postId}/comment/${comment?._id}/delete`,\n          {\n            headers: { Authorization: token },\n          }\n        );\n        dispatch(updateUser(token));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center  my-4\">\n      <img\n        className=\"inline object-cover w-7 h-7  mr-2 rounded-full\"\n        src={comment?.user.profile_img_url}\n        alt=\"avatar\"\n      />\n      <div className=\"relative\">\n        <div className=\"bg-gray-600 p-2 rounded-2xl px-5\">\n          <h5 className=\"font-semibold\">{`${comment.user.first_name} ${comment.user.last_name} `}</h5>\n          <p className=\"text-sm\">{comment?.text}</p>\n        </div>\n        <span className=\"absolute right-0 flex items-center text-gray-400\">\n          {timeFromPostTime(comment.createdAt)}\n          <ClockIcon className=\"h-4 w-4\" />\n        </span>\n      </div>\n      {user?._id === comment.user._id ? (\n        <button\n          onClick={deleteComment}\n          className=\"text-white bg-red-700 hover:bg-red-800 p-1  m-2 transform hover:scale-125 transition-all  rounded-full\"\n        >\n          <TrashIcon className=\"h-4 w-4 \" />\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CommentItem;\n","import React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport axios from 'axios';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  postId: string;\n}\n\nconst NewComment = ({ postId }: Props) => {\n  const [newComment, setNewComment] = useState<string>('');\n  const user = useAppSelector((state) => state.user.user);\n  const dispatch = useAppDispatch();\n  const token = localStorage.getItem('token');\n  const changeHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setNewComment(event.target.value);\n  };\n\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      if (token && newComment.length > 0) {\n        await axios.post(\n          `api/post/${postId}/new-comment`,\n          { text: newComment },\n          { headers: { Authorization: token } }\n        );\n        dispatch(updateUser(token));\n        setNewComment('');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <form onSubmit={(event) => submitHandler(event)}>\n      <div className=\"flex items-center \">\n        <img\n          className=\"inline object-cover w-9 h-9  mr-2 rounded-full\"\n          src={user?.profile_img_url}\n          alt=\"avatar\"\n        />\n\n        <TextareaAutosize\n          placeholder={`Write a comment ...`}\n          className=\"w-full bg-gray-500 rounded-2xl p-1\"\n          onChange={(event) => {\n            changeHandler(event);\n          }}\n          value={newComment}\n          required\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-blue-800 rounded hover:bg-blue-900 px-5\"\n        >\n          Send\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewComment;\n","import React from 'react';\nimport CommentItem from './CommentItem';\nimport NewComment from './NewComment';\n\ninterface Props {\n  allComments: any[];\n  postId: string;\n}\n\nconst Comments = ({ allComments, postId }: Props) => {\n  return (\n    <div className=\"flex flex-col border-t-2 border-red-gray-200 mt-2 p-3\">\n      <NewComment postId={postId} />\n      {allComments &&\n        allComments.map((comment) => {\n          return (\n            <CommentItem key={comment._id} comment={comment} postId={postId} />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { PencilIcon, XIcon } from '@heroicons/react/solid';\nimport axios from 'axios';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {\n  postId: string;\n  userImg: string;\n  closeModal: () => void;\n}\n\nconst PostEdit = ({ postId, userImg, closeModal }: Props) => {\n  const [text, setText] = useState('');\n  const [loading, setLoading] = useState<boolean>(true);\n  const token = localStorage.getItem('token');\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  const getPost = async () => {\n    try {\n      if (token) {\n        const singlePost = await axios.get(`api/posts/${postId}`, {\n          headers: { Authorization: token },\n        });\n\n        const t: string = singlePost.data.post.text;\n        console.log(singlePost.data.post);\n        setText(t);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const changeHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(event.target.value);\n  };\n\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      if (token) {\n        const editedPost = await axios.put(\n          `api/posts/${postId}/update`,\n          { text: text },\n          {\n            headers: { Authorization: token },\n          }\n        );\n        if (editedPost) {\n          closeModal();\n          dispatch(updateUser(token));\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-black h-full p-10 flex items-center justify-center \">\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-gray-800 rounded-xl h-full p-10 flex flex-col text-white\">\n      <form onSubmit={submitHandler} className=\"flex-col w-full\">\n        <div className=\"flex justify-between items-center m-3\">\n          <h3 className=\"text-xl font-bold\">Edit post:</h3>\n\n          <button\n            onClick={closeModal}\n            className=\"p-1 bg-red-500 hover:bg-red-600 transform hover:scale-105 rounded-full\"\n          >\n            <XIcon className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        <div className=\"flex w-full\">\n          <img\n            className=\"inline object-cover w-9 h-9  mr-2 rounded-full\"\n            src={userImg}\n            alt=\"avatar\"\n          />\n          <TextareaAutosize\n            placeholder={`Write a comment ...`}\n            className=\"w-full bg-gray-500 rounded-2xl p-1\"\n            onChange={(event) => {\n              changeHandler(event);\n            }}\n            value={text}\n            required\n          />\n        </div>\n        <div className=\"flex justify-end m-2\">\n          <button\n            type=\"submit\"\n            className=\"bg-blue-700 hover:bg-blue-800 transform hover:scale-105 flex items-center justify-center rounded p-2\"\n          >\n            <p>Edit post</p>\n            <PencilIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PostEdit;\n","import React, { useState } from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport { ClockIcon, DotsVerticalIcon } from '@heroicons/react/solid';\nimport Like from './Like';\nimport Comment from './Comment';\nimport LikePost from './LikePost';\nimport CommentPost from './CommentPost';\nimport DeletePost from './DeletePost';\nimport Comments from './Comments';\nimport timeFromPostTime from '../../helper';\nimport Modal from 'react-modal';\nimport PostEdit from './PostEdit';\n\nModal.setAppElement('#root');\n\ninterface Props {\n  post: any;\n}\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: 0,\n    width: '60%',\n    height: '65%',\n    borderRadius: '0.75rem',\n  },\n};\n\nconst Post = ({ post }: Props) => {\n  const [showComments, setShowComments] = useState<boolean>(false);\n  const [modalIsOpen, setIsOpen] = useState<boolean>(false);\n  const img = post.user.profile_img_url;\n  const user = useAppSelector((state) => state.user.user);\n\n  const showHide = () => {\n    setShowComments(!showComments);\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"bg-gray-800 my-4 p-2 rounded\">\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <img\n            className=\"inline object-cover w-9 h-9  mr-2 rounded-full\"\n            src={post?.user.profile_img_url}\n            alt=\"avatar\"\n          />\n          <div>\n            <p className=\"font-bold text-base\">{post.user.first_name}</p>\n            <p className=\"text-sm text-gray-100 flex items-center\">\n              {timeFromPostTime(post.createdAt)}\n              <ClockIcon className=\"h-4 w-4\" />\n            </p>\n          </div>\n        </div>\n        <div>\n          {user?._id === post?.user._id ? (\n            <button\n              onClick={openModal}\n              className=\"flex items-center font-semibold text-gray-400 hover:text-gray-500\"\n            >\n              Edit\n              <DotsVerticalIcon className=\"h-5 w-5\" />\n            </button>\n          ) : null}\n        </div>\n      </div>\n      <div className=\"mt-2 p-2 text-justify\">{post.text}</div>\n      {post.image_url && (\n        <div className=\"flex justify-center\">\n          <img\n            className=\"rounded-lg border-black border-2 h-96 w-96\"\n            src={post.image_url}\n            alt=\"post\"\n          ></img>\n        </div>\n      )}\n      <div className=\"flex justify-between items-center \">\n        <div className=\"mt-2 p-2 flex items-center \">\n          <Like likes={post.likes} />\n        </div>\n        <Comment showHide={showHide} comments={post.comments} />\n      </div>\n      <div className=\"flex justify-evenly p-2  text-gray-400 border-t-2 border-red-gray-200\">\n        <LikePost postId={post._id} />\n        <CommentPost showHide={showHide} />\n        {user && user._id === post.user._id ? (\n          <DeletePost postId={post._id} />\n        ) : null}\n      </div>\n      {showComments && (\n        <Comments postId={post._id} allComments={post?.comments} />\n      )}\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel={'Example modal'}\n      >\n        <PostEdit\n          postId={post._id}\n          userImg={post?.user.profile_img_url}\n          closeModal={closeModal}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport Post from './Post';\nimport Loader from 'react-loader-spinner';\n\ninterface Props {}\n\nconst PostList = (props: Props) => {\n  const friendPosts = useAppSelector((state) => state.allPosts.allPosts);\n  const loading = useAppSelector((state) => state.allPosts.isFetching);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center\">\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {friendPosts &&\n        friendPosts.map((post) => {\n          return <Post key={post._id} post={post} />;\n        })}\n    </>\n  );\n};\n\nexport default PostList;\n","import React from 'react';\nimport NewPost from './NewPost';\nimport PostList from './PostList';\n\ninterface Props {}\n\nconst PostMain = (props: Props) => {\n  return (\n    <div className=\"overflow-scroll h-full\">\n      <NewPost />\n      <PostList />\n    </div>\n  );\n};\n\nexport default PostMain;\n","import React from 'react';\nimport ReplyRequest from '../otheruser/ReplyRequest';\nimport { User } from '../../redux/userSlice';\n\ninterface Props {\n  request?: User;\n}\n\nconst PendingRequest = ({ request }: Props) => {\n  console.log(request);\n  return (\n    <div className=\"bg-gray-900 rounded flex justify-between mt-2 p-2\">\n      <div className=\"flex items-center\">\n        <img\n          className=\"inline object-cover w-8 h-8 rounded-full mr-2\"\n          src={request?.profile_img_url}\n          alt=\"avatar\"\n        />\n        <p className=\"text-base\">{`${request?.first_name} ${request?.last_name} `}</p>\n      </div>\n      <div>\n        <ReplyRequest secondUser_id={request?._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default PendingRequest;\n","import React from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport PendingRequest from './PendingRequest';\nimport Loader from 'react-loader-spinner';\n\ninterface Props {}\n\nconst PendingFriend = (props: Props) => {\n  const friendRequests = useAppSelector(\n    (state) => state.user.user?.friend_requests\n  );\n  const loading = useAppSelector((state) => state.user.isFetching);\n  return (\n    <div className=\"bg-gray-800 bg-opacity-90 m-2 rounded h-2/5 p-2 text-white shadow overflow-auto\">\n      <h3 className=\"font-bold mb-1 text-lg \">Pending friend requests:</h3>\n      {loading && (\n        <div className=\"flex justify-center\">\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      )}\n      {!loading &&\n        friendRequests &&\n        friendRequests.map((request) => {\n          return <PendingRequest key={request._id} request={request} />;\n        })}\n      {!loading && !friendRequests?.length && (\n        <p className=\"text-red-500\">You have no friends requests!</p>\n      )}\n    </div>\n  );\n};\n\nexport default PendingFriend;\n","import React from 'react';\nimport { User } from '../../redux/userSlice';\nimport CancelRequest from '../otheruser/CancelRequest';\n\ninterface Props {\n  sendRequest: User;\n}\n\nconst Send = ({ sendRequest }: Props) => {\n  return (\n    <div className=\"bg-gray-900 rounded flex justify-between mt-2 p-2\">\n      <div className=\"flex items-center\">\n        <img\n          className=\"inline object-cover w-8 h-8 rounded-full mr-2\"\n          src={sendRequest?.profile_img_url}\n          alt=\"avatar\"\n        />\n        <p className=\"text-base\">{`${sendRequest?.first_name} ${sendRequest?.last_name} `}</p>\n      </div>\n      <div>\n        <CancelRequest secondUser_id={sendRequest?._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default Send;\n","import React from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport Send from './Send';\n\ninterface Props {}\n\nconst SendFriend = (props: Props) => {\n  const sendFriendRequests = useAppSelector(\n    (state) => state.user.user?.friend_send\n  );\n\n  return (\n    <div className=\"bg-gray-800 bg-opacity-90 m-2 rounded h-2/5 p-2 text-white shadow overflow-auto\">\n      <h3 className=\"font-bold mb-1 text-lg \">Sent friend requests:</h3>\n\n      {sendFriendRequests &&\n        sendFriendRequests.map((sendRequest) => {\n          return <Send key={sendRequest._id} sendRequest={sendRequest} />;\n        })}\n      {!sendFriendRequests?.length && (\n        <p className=\"text-red-500\">You have no sent friend requests!</p>\n      )}\n    </div>\n  );\n};\n\nexport default SendFriend;\n","import React from 'react';\nimport AllUsers from './AllUsers';\nimport FriendList from './friends/FriendList';\nimport PostMain from './main/PostMain';\nimport PendingFriend from './pendingRequests/PendingFriend';\nimport SendFriend from './sendRequests/SendFriend';\n\ninterface Props {}\n\nconst Odinbook = (props: Props) => {\n  return (\n    <div className=\"w-full h-full flex  text-white\">\n      <div className=\" w-1/4\">\n        <AllUsers />\n        <FriendList />\n      </div>\n      <div className=\"w-2/4\">\n        <PostMain />\n      </div>\n      <div className=\"w-1/4\">\n        <PendingFriend />\n        <SendFriend />\n      </div>\n    </div>\n  );\n};\n\nexport default Odinbook;\n","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\n\ninterface ProtectedRouteProps extends RouteProps {\n  // tslint:disable-next-line:no-any\n  component: any;\n  loggedIn: boolean;\n}\n\nconst ProtectedRoute = (props: ProtectedRouteProps) => {\n  const { component: Component, loggedIn, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        loggedIn ? (\n          <Component {...routeProps} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: routeProps.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { useState, useRef } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport axios from 'axios';\n\nimport { updateUser } from '../../redux/userSlice';\n\ninterface Props {}\n\nconst ProfileMain = (props: Props) => {\n  const user = useAppSelector((state) => state.user.user);\n  const [profileImage, setProfileImage] = useState<any>('');\n  const token = localStorage.getItem('token');\n  const ref = useRef<HTMLInputElement | null>(null);\n  const dispatch = useAppDispatch();\n\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files) return;\n    console.log(event.target.files);\n    setProfileImage(event.target.files[0]);\n  };\n\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (token) {\n      const data = new FormData();\n      data.append('file', profileImage);\n      console.log(data);\n      await axios.post('api/user/updateProfilePicture', data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: token,\n        },\n      });\n      if (ref.current) {\n        ref.current.value = '';\n      }\n      dispatch(updateUser(token));\n    }\n  };\n  return (\n    <div className=\"flex justify-center bg-gray-800 rounded\">\n      <div className=\"flex flex-col items-center p-5\">\n        <img\n          className=\"inline object-cover w-40 h-40 mr-2 rounded-full border-4 border-black\"\n          src={user?.profile_img_url}\n          alt=\"avatar\"\n        />\n        <h2 className=\"font-bold text-3xl  \">{`${user?.first_name} ${user?.last_name}`}</h2>\n        <form\n          onSubmit={(e) => {\n            submitHandler(e);\n          }}\n        >\n          <div className=\"flex flex-col border-2 bg-gray-900 p-4 gap-3 rounded\">\n            <div className=\"flex justify-center flex-col items-center\">\n              <label className=\"font-bold text-xl\">\n                If you want to change profile picture click bellow\n              </label>\n              <input\n                type=\"file\"\n                name=\"file\"\n                onChange={(event) => {\n                  onChangeHandler(event);\n                }}\n                ref={ref}\n              />\n            </div>\n\n            <button type=\"submit\" className=\"bg-green-500 rounded  \">\n              Upload file\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileMain;\n","import React from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport Post from '../main/Post';\nimport ProfileMain from './ProfileMain';\n\ninterface Props {}\n\nconst Profile = (props: Props) => {\n  const user = useAppSelector((state) => state.user.user);\n\n  return (\n    <div className=\"flex items-center flex-col mt-5\">\n      <div className=\"w-1/2\">\n        <ProfileMain />\n      </div>\n      {user &&\n        user?.posts.map((post) => {\n          console.log(post);\n          return <Post key={post._id} post={post} />;\n        })}\n\n      {!user?.posts.length && <p>You have no posts!</p>}\n    </div>\n  );\n};\n\nexport default Profile;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\ninterface Props {}\n\nconst Register = (props: Props) => {\n  const [first_name, setFirst_name] = useState<string>('');\n  const [last_name, setLast_name] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [redirect, setRedirect] = useState<boolean>(false);\n  const submitHandler = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    try {\n      const data = await axios.post(`api/user/register`, {\n        first_name,\n        last_name,\n        email,\n        password,\n      });\n      console.log(data);\n      setRedirect(!redirect);\n    } catch (error) {\n      setError(error.response.data.msg);\n    }\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"flex justify-center w-screen\">\n      <div className=\"bg-gray-800 mt-32 w-1/2 h-auto rounded shadow p-5\">\n        <h2 className=\"font-bold text-2xl my-5\">Register</h2>\n        <form\n          onSubmit={(event) => {\n            submitHandler(event);\n          }}\n        >\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"first_name\">\n                <b>First Name</b>\n              </label>\n              <input\n                className=\"p-2 rounded text-black\"\n                type=\"text\"\n                placeholder=\"Enter First Name\"\n                name=\"first_name\"\n                value={first_name}\n                onChange={(event) => {\n                  setFirst_name(event.target.value);\n                }}\n                required\n              />\n            </div>\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"last_name\">\n                <b>Last Name</b>\n              </label>\n              <input\n                className=\"p-2 rounded text-black\"\n                type=\"text\"\n                placeholder=\"Enter Last Name\"\n                name=\"last_name\"\n                value={last_name}\n                onChange={(event) => {\n                  setLast_name(event.target.value);\n                }}\n                required\n              />\n            </div>\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"email\">\n                <b>Email</b>\n              </label>\n              <input\n                className=\"p-2 rounded text-black\"\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                name=\"email\"\n                value={email}\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n                required\n              />\n            </div>\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"password\">\n                <b>Password</b>\n              </label>\n              <input\n                className=\"p-2 rounded text-black\"\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                value={password}\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                required\n              />\n            </div>\n            {error && <span className=\"text-red-500\">{error}</span>}\n            <div className=\"w-full mt-2\">\n              <button\n                type=\"submit\"\n                className=\"w-full bg-blue-500 rounded p-2 font-semibold\"\n              >\n                Register\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect } from 'react';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Odinbook from './components/Odinbook';\nimport { useAppSelector, useAppDispatch } from './redux/hooks';\nimport ProtectedRoute from './hoc/protectedRoute';\nimport { loginUser } from './redux/userSlice';\nimport Modal from 'react-modal';\nimport Profile from './components/profile/Profile';\nimport Register from './components/Register';\n// testing socket.io\n\nModal.setAppElement('#root');\n\nfunction App() {\n  const loggedIn = useAppSelector((state) => state.user.loggedIn);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const access_token = localStorage.getItem('access_token');\n    if (access_token) {\n      dispatch(loginUser(access_token));\n    }\n  }, []);\n\n  return (\n    <Router>\n      <div className=\" h-full text-white bg-gray-700\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Login}></Route>\n          <Route exact path=\"/register\" component={Register}></Route>\n          <ProtectedRoute\n            exact\n            component={Odinbook}\n            path=\"/odinbook\"\n            loggedIn={loggedIn}\n          />\n          <ProtectedRoute\n            component={Profile}\n            path=\"/profile\"\n            loggedIn={loggedIn}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice'\nimport allUserReducer from './allUsersSlice'\nimport allPostsReducer from './postsSlice'\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    allUsers: allUserReducer,\n    allPosts: allPostsReducer\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://warm-falls-67590.herokuapp.com/';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}